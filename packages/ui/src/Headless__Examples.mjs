// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Caml_array from "rescript/lib/es6/caml_array.js";
import * as React$1 from "@headlessui/react";
import * as Solid from "@heroicons/react/solid";
import * as Outline from "@heroicons/react/outline";
import * as Tailwind$IsenseiMonorepo from "../../tailwind/src/Tailwind.mjs";

function Headless__Examples$EditInactiveIcon(Props) {
  var className = Props.className;
  var ariaHidden = Props.ariaHidden;
  return React.createElement("svg", {
              "aria-hidden": ariaHidden,
              className: className,
              fill: "none",
              viewBox: "0 0 20 20",
              xmlns: "http://www.w3.org/2000/svg"
            }, React.createElement("path", {
                  d: "M4 13V16H7L16 7L13 4L4 13Z",
                  fill: "#EDE9FE",
                  stroke: "#A78BFA",
                  strokeWidth: "2"
                }));
}

var EditInactiveIcon = {
  make: Headless__Examples$EditInactiveIcon
};

function Headless__Examples$EditActiveIcon(Props) {
  var className = Props.className;
  var ariaHidden = Props.ariaHidden;
  return React.createElement("svg", {
              "aria-hidden": ariaHidden,
              className: className,
              fill: "none",
              viewBox: "0 0 20 20",
              xmlns: "http://www.w3.org/2000/svg"
            }, React.createElement("path", {
                  d: "M4 13V16H7L16 7L13 4L4 13Z",
                  fill: "#8B5CF6",
                  stroke: "#C4B5FD",
                  strokeWidth: "2"
                }));
}

var EditActiveIcon = {
  make: Headless__Examples$EditActiveIcon
};

function Headless__Examples$DuplicateInactiveIcon(Props) {
  var className = Props.className;
  var ariaHidden = Props.ariaHidden;
  return React.createElement("svg", {
              "aria-hidden": ariaHidden,
              className: className,
              fill: "none",
              viewBox: "0 0 20 20",
              xmlns: "http://www.w3.org/2000/svg"
            }, React.createElement("path", {
                  d: "M4 4H12V12H4V4Z",
                  fill: "#EDE9FE",
                  stroke: "#A78BFA",
                  strokeWidth: "2"
                }), React.createElement("path", {
                  d: "M8 8H16V16H8V8Z",
                  fill: "#EDE9FE",
                  stroke: "#A78BFA",
                  strokeWidth: "2"
                }));
}

var DuplicateInactiveIcon = {
  make: Headless__Examples$DuplicateInactiveIcon
};

function Headless__Examples$DuplicateActiveIcon(Props) {
  var className = Props.className;
  var ariaHidden = Props.ariaHidden;
  return React.createElement("svg", {
              "aria-hidden": ariaHidden,
              className: className,
              fill: "none",
              viewBox: "0 0 20 20",
              xmlns: "http://www.w3.org/2000/svg"
            }, React.createElement("path", {
                  d: "M4 4H12V12H4V4Z",
                  fill: "#8B5CF6",
                  stroke: "#C4B5FD",
                  strokeWidth: "2"
                }), React.createElement("path", {
                  d: "M8 8H16V16H8V8Z",
                  fill: "#8B5CF6",
                  stroke: "#C4B5FD",
                  strokeWidth: "2"
                }));
}

var DuplicateActiveIcon = {
  make: Headless__Examples$DuplicateActiveIcon
};

function Headless__Examples$ArchiveInactiveIcon(Props) {
  var className = Props.className;
  var ariaHidden = Props.ariaHidden;
  return React.createElement("svg", {
              "aria-hidden": ariaHidden,
              className: className,
              fill: "none",
              viewBox: "0 0 20 20",
              xmlns: "http://www.w3.org/2000/svg"
            }, React.createElement("rect", {
                  height: "8",
                  width: "10",
                  fill: "#EDE9FE",
                  stroke: "#A78BFA",
                  strokeWidth: "2",
                  x: "5",
                  y: "8"
                }), React.createElement("rect", {
                  height: "4",
                  width: "12",
                  fill: "#EDE9FE",
                  stroke: "#A78BFA",
                  strokeWidth: "2",
                  x: "4",
                  y: "4"
                }), React.createElement("path", {
                  d: "M8 12H12",
                  stroke: "#A78BFA",
                  strokeWidth: "2"
                }));
}

var ArchiveInactiveIcon = {
  make: Headless__Examples$ArchiveInactiveIcon
};

function Headless__Examples$ArchiveActiveIcon(Props) {
  var className = Props.className;
  var ariaHidden = Props.ariaHidden;
  return React.createElement("svg", {
              "aria-hidden": ariaHidden,
              className: className,
              fill: "none",
              viewBox: "0 0 20 20",
              xmlns: "http://www.w3.org/2000/svg"
            }, React.createElement("rect", {
                  height: "8",
                  width: "10",
                  fill: "#8B5CF6",
                  stroke: "#C4B5FD",
                  strokeWidth: "2",
                  x: "5",
                  y: "8"
                }), React.createElement("rect", {
                  height: "4",
                  width: "12",
                  fill: "#8B5CF6",
                  stroke: "#C4B5FD",
                  strokeWidth: "2",
                  x: "4",
                  y: "4"
                }), React.createElement("path", {
                  d: "M8 12H12",
                  stroke: "#A78BFA",
                  strokeWidth: "2"
                }));
}

var ArchiveActiveIcon = {
  make: Headless__Examples$ArchiveActiveIcon
};

function Headless__Examples$MoveInactiveIcon(Props) {
  var className = Props.className;
  var ariaHidden = Props.ariaHidden;
  return React.createElement("svg", {
              "aria-hidden": ariaHidden,
              className: className,
              fill: "none",
              viewBox: "0 0 20 20",
              xmlns: "http://www.w3.org/2000/svg"
            }, React.createElement("path", {
                  d: "M10 4H16V10",
                  stroke: "#A78BFA",
                  strokeWidth: "2"
                }), React.createElement("path", {
                  d: "M16 4L8 12",
                  stroke: "#A78BFA",
                  strokeWidth: "2"
                }), React.createElement("path", {
                  d: "M8 6H4V16H14V12",
                  stroke: "#A78BFA",
                  strokeWidth: "2"
                }));
}

var MoveInactiveIcon = {
  make: Headless__Examples$MoveInactiveIcon
};

function Headless__Examples$MoveActiveIcon(Props) {
  var className = Props.className;
  var ariaHidden = Props.ariaHidden;
  return React.createElement("svg", {
              "aria-hidden": ariaHidden,
              className: className,
              fill: "none",
              viewBox: "0 0 20 20",
              xmlns: "http://www.w3.org/2000/svg"
            }, React.createElement("path", {
                  d: "M10 4H16V10",
                  stroke: "#C4B5FD",
                  strokeWidth: "2"
                }), React.createElement("path", {
                  d: "M16 4L8 12",
                  stroke: "#C4B5FD",
                  strokeWidth: "2"
                }), React.createElement("path", {
                  d: "M8 6H4V16H14V12",
                  stroke: "#C4B5FD",
                  strokeWidth: "2"
                }));
}

var MoveActiveIcon = {
  make: Headless__Examples$MoveActiveIcon
};

function Headless__Examples$DeleteInactiveIcon(Props) {
  var className = Props.className;
  var ariaHidden = Props.ariaHidden;
  return React.createElement("svg", {
              "aria-hidden": ariaHidden,
              className: className,
              fill: "none",
              viewBox: "0 0 20 20",
              xmlns: "http://www.w3.org/2000/svg"
            }, React.createElement("rect", {
                  height: "10",
                  width: "10",
                  fill: "#EDE9FE",
                  stroke: "#A78BFA",
                  strokeWidth: "2",
                  x: "5",
                  y: "6"
                }), React.createElement("path", {
                  d: "M3 6H17",
                  stroke: "#A78BFA",
                  strokeWidth: "2"
                }), React.createElement("path", {
                  d: "M8 6V4H12V6",
                  stroke: "#A78BFA",
                  strokeWidth: "2"
                }));
}

var DeleteInactiveIcon = {
  make: Headless__Examples$DeleteInactiveIcon
};

function Headless__Examples$DeleteActiveIcon(Props) {
  var className = Props.className;
  var ariaHidden = Props.ariaHidden;
  return React.createElement("svg", {
              "aria-hidden": ariaHidden,
              className: className,
              fill: "none",
              viewBox: "0 0 20 20",
              xmlns: "http://www.w3.org/2000/svg"
            }, React.createElement("rect", {
                  height: "10",
                  width: "10",
                  fill: "#EDE9FE",
                  stroke: "#A78BFA",
                  strokeWidth: "2",
                  x: "5",
                  y: "6"
                }), React.createElement("rect", {
                  height: "10",
                  width: "10",
                  fill: "#8B5CF6",
                  stroke: "#C4B5FD",
                  strokeWidth: "2",
                  x: "5",
                  y: "6"
                }), React.createElement("path", {
                  d: "M3 6H17",
                  stroke: "#C4B5FD",
                  strokeWidth: "2"
                }), React.createElement("path", {
                  d: "M8 6V4H12V6",
                  stroke: "#C4B5FD",
                  strokeWidth: "2"
                }));
}

var DeleteActiveIcon = {
  make: Headless__Examples$DeleteActiveIcon
};

var div = Tailwind$IsenseiMonorepo.twStyle([
      Tailwind$IsenseiMonorepo.w(56),
      Tailwind$IsenseiMonorepo.textRight,
      Tailwind$IsenseiMonorepo.fixed,
      Tailwind$IsenseiMonorepo.top(16)
    ]);

var menu = Tailwind$IsenseiMonorepo.twStyle([
      Tailwind$IsenseiMonorepo.relative,
      Tailwind$IsenseiMonorepo.inlineBlock,
      Tailwind$IsenseiMonorepo.textLeft
    ]);

var button = Tailwind$IsenseiMonorepo.twStyle([
      Tailwind$IsenseiMonorepo.inlineFlex,
      Tailwind$IsenseiMonorepo.justifyCenter,
      Tailwind$IsenseiMonorepo.w("full"),
      Tailwind$IsenseiMonorepo.p({
            NAME: "x",
            VAL: 4
          }),
      Tailwind$IsenseiMonorepo.p({
            NAME: "y",
            VAL: 4
          }),
      Tailwind$IsenseiMonorepo.textSize("sm"),
      Tailwind$IsenseiMonorepo.fontWeight(500),
      Tailwind$IsenseiMonorepo.textColor(undefined, "white"),
      Tailwind$IsenseiMonorepo.bg(0.2, "black"),
      Tailwind$IsenseiMonorepo.rounded({
            NAME: "all",
            VAL: "md"
          }),
      Tailwind$IsenseiMonorepo.hover([Tailwind$IsenseiMonorepo.bg(0.3, "black")]),
      Tailwind$IsenseiMonorepo.focus([Tailwind$IsenseiMonorepo.outlineNone])
    ]);

var Styles = {
  div: div,
  menu: menu,
  button: button
};

function Headless__Examples$Dropdown(Props) {
  return React.createElement("div", {
              className: div
            }, React.createElement(React$1.Menu, {
                  as: "div",
                  className: menu,
                  children: (function (param) {
                      return React.createElement(React.Fragment, undefined, React.createElement("div", undefined, React.createElement(React$1.Menu.Button, {
                                          className: button,
                                          children: (function (_open) {
                                              return React.createElement(React.Fragment, undefined, "Options", React.createElement(Outline.ChevronDownIcon, {
                                                              className: "w-5 h-5 ml-2 -mr-1 text-violet-200 hover:text-violet-100",
                                                              ariaHidden: true
                                                            }));
                                            })
                                        })), React.createElement(React$1.Transition, {
                                      as: "fragment",
                                      enter: "transition ease-out duration-100",
                                      enterFrom: "transform opacity-0 scale-95",
                                      enterTo: "transform opacity-100 scale-100",
                                      leave: "transition ease-in duration-75",
                                      leaveFrom: "transform opacity-100 scale-100",
                                      leaveTo: "transform opacity-0 scale-95",
                                      children: React.createElement(React$1.Menu.Items, {
                                            className: "absolute right-0 w-56 mt-2 origin-top-right bg-white divide-y divide-gray-100 rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none",
                                            children: (function (param) {
                                                return React.createElement(React.Fragment, undefined, React.createElement("div", {
                                                                className: "px-1 py-1 "
                                                              }, React.createElement(React$1.Menu.Item, {
                                                                    children: (function (param) {
                                                                        var active = param.active;
                                                                        return React.createElement("button", {
                                                                                    className: (
                                                                                      active ? "bg-violet-500 text-white" : "text-gray-900"
                                                                                    ) + " group flex rounded-md items-center w-full px-2 py-2 text-sm"
                                                                                  }, active ? React.createElement(Headless__Examples$EditActiveIcon, {
                                                                                          className: "w-5 h-5 mr-2",
                                                                                          ariaHidden: true
                                                                                        }) : React.createElement(Headless__Examples$EditInactiveIcon, {
                                                                                          className: "w-5 h-5 mr-2",
                                                                                          ariaHidden: true
                                                                                        }), "Edit");
                                                                      })
                                                                  }), React.createElement(React$1.Menu.Item, {
                                                                    children: (function (param) {
                                                                        var active = param.active;
                                                                        return React.createElement("button", {
                                                                                    className: (
                                                                                      active ? "bg-violet-500 text-white" : "text-gray-900"
                                                                                    ) + " group flex rounded-md items-center w-full px-2 py-2 text-sm"
                                                                                  }, active ? React.createElement(Headless__Examples$DuplicateActiveIcon, {
                                                                                          className: "w-5 h-5 mr-2",
                                                                                          ariaHidden: true
                                                                                        }) : React.createElement(Headless__Examples$DuplicateInactiveIcon, {
                                                                                          className: "w-5 h-5 mr-2",
                                                                                          ariaHidden: true
                                                                                        }), "Duplicate");
                                                                      })
                                                                  }), React.createElement("div", {
                                                                    className: "px-1 py-1"
                                                                  }, React.createElement(React$1.Menu.Item, {
                                                                        children: (function (param) {
                                                                            var active = param.active;
                                                                            return React.createElement("button", {
                                                                                        className: (
                                                                                          active ? "bg-violet-500 text-white" : "text-gray-900"
                                                                                        ) + " group flex rounded-md items-center w-full px-2 py-2 text-sm"
                                                                                      }, active ? React.createElement(Headless__Examples$ArchiveActiveIcon, {
                                                                                              className: "w-5 h-5 mr-2",
                                                                                              ariaHidden: true
                                                                                            }) : React.createElement(Headless__Examples$ArchiveInactiveIcon, {
                                                                                              className: "w-5 h-5 mr-2",
                                                                                              ariaHidden: true
                                                                                            }), "Archive");
                                                                          })
                                                                      }), React.createElement(React$1.Menu.Item, {
                                                                        children: (function (param) {
                                                                            var active = param.active;
                                                                            return React.createElement("button", {
                                                                                        className: (
                                                                                          active ? "bg-violet-500 text-white" : "text-gray-900"
                                                                                        ) + " group flex rounded-md items-center w-full px-2 py-2 text-sm"
                                                                                      }, active ? React.createElement(Headless__Examples$MoveActiveIcon, {
                                                                                              className: "w-5 h-5 mr-2",
                                                                                              ariaHidden: true
                                                                                            }) : React.createElement(Headless__Examples$MoveInactiveIcon, {
                                                                                              className: "w-5 h-5 mr-2",
                                                                                              ariaHidden: true
                                                                                            }), "Move");
                                                                          })
                                                                      })), React.createElement("div", {
                                                                    className: "px-1 py-1"
                                                                  }, React.createElement(React$1.Menu.Item, {
                                                                        children: (function (param) {
                                                                            var active = param.active;
                                                                            return React.createElement("button", {
                                                                                        className: (
                                                                                          active ? "bg-violet-500 text-white" : "text-gray-900"
                                                                                        ) + " group flex rounded-md items-center w-full px-2 py-2 text-sm"
                                                                                      }, active ? React.createElement(Headless__Examples$DeleteActiveIcon, {
                                                                                              className: "w-5 h-5 mr-2 text-violet-400",
                                                                                              ariaHidden: true
                                                                                            }) : React.createElement(Headless__Examples$DeleteInactiveIcon, {
                                                                                              className: "w-5 h-5 mr-2 text-violet-400",
                                                                                              ariaHidden: true
                                                                                            }), "Delete");
                                                                          })
                                                                      }))));
                                              })
                                          })
                                    }));
                    })
                }));
}

var Dropdown = {
  Styles: Styles,
  make: Headless__Examples$Dropdown
};

var people = [
  {
    name: "Wade Cooper"
  },
  {
    name: "Arlene Mccoy"
  },
  {
    name: "Devon Webb"
  },
  {
    name: "Tom Cook"
  },
  {
    name: "Tanya Fox"
  },
  {
    name: "Hellen Schmidt"
  }
];

function Headless__Examples$Listbox(Props) {
  var match = React.useState(function () {
        return Caml_array.get(people, 0);
      });
  var setSelected = match[1];
  var selected = match[0];
  var onChange = function (person) {
    return Curry._1(setSelected, (function (_prev) {
                  return person;
                }));
  };
  var renderOptions = people.map(function (person, personIdx) {
        return React.createElement(React$1.Listbox.Option, {
                    value: person,
                    className: (function (active) {
                        return (
                                active ? "text-amber-900 bg-amber-100" : "text-gray-900"
                              ) + "\n                          cursor-default select-none relative py-2 pl-10 pr-4";
                      }),
                    children: (function (param) {
                        var selected = param.selected;
                        return React.createElement(React.Fragment, undefined, React.createElement("span", {
                                        className: (
                                          selected ? "font-medium" : "font-normal"
                                        ) + " block truncate"
                                      }, person.name), selected ? React.createElement("span", {
                                          className: "text-amber-600" + "\n                                absolute inset-y-0 left-0 flex items-center pl-3"
                                        }, React.createElement(Solid.CheckIcon, {
                                              className: "w-5 h-5",
                                              ariaHidden: true
                                            })) : null);
                      }),
                    key: String(personIdx)
                  });
      });
  return React.createElement("div", {
              className: "w-72 fixed top-16"
            }, React.createElement(React$1.Listbox, {
                  value: selected,
                  onChange: onChange,
                  children: (function (param) {
                      return React.createElement("div", {
                                  className: "relative mt-1"
                                }, React.createElement(React$1.Listbox.Button, {
                                      className: "relative w-full py-2 pl-3 pr-10 text-left bg-white rounded-lg shadow-md cursor-default focus:outline-none focus-visible:ring-2 focus-visible:ring-opacity-75 focus-visible:ring-white focus-visible:ring-offset-orange-300 focus-visible:ring-offset-2 focus-visible:border-indigo-500 sm:text-sm",
                                      children: (function (param) {
                                          return React.createElement(React.Fragment, undefined, React.createElement("span", {
                                                          className: "block truncate"
                                                        }, selected.name), React.createElement("span", {
                                                          className: "absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none"
                                                        }, React.createElement(Solid.SelectorIcon, {
                                                              className: "w-5 h-5 text-gray-400",
                                                              ariaHidden: true
                                                            })));
                                        })
                                    }), React.createElement(React$1.Transition, {
                                      leave: "transition ease-in duration-100",
                                      leaveFrom: "opacity-100",
                                      leaveTo: "opacity-0",
                                      children: React.createElement(React$1.Listbox.Options, {
                                            className: "absolute w-full py-1 mt-1 overflow-auto text-base bg-white rounded-md shadow-lg max-h-60 ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm",
                                            children: (function (param) {
                                                return renderOptions;
                                              })
                                          })
                                    }));
                    })
                }));
}

var Listbox = {
  people: people,
  make: Headless__Examples$Listbox
};

function Headless__Examples$Switch(Props) {
  var match = React.useState(function () {
        return false;
      });
  var setEnabled = match[1];
  var enabled = match[0];
  return React.createElement("div", {
              className: "py-16"
            }, React.createElement(React$1.Switch, {
                  checked: enabled,
                  onChange: (function (param) {
                      return Curry._1(setEnabled, (function (_prev) {
                                    return !_prev;
                                  }));
                    }),
                  className: (
                    enabled ? "bg-teal-900" : "bg-teal-700"
                  ) + "\n          relative inline-flex flex-shrink-0 h-[38px] w-[74px] border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus-visible:ring-2  focus-visible:ring-white focus-visible:ring-opacity-75",
                  children: (function (param) {
                      return React.createElement(React.Fragment, undefined, React.createElement("span", {
                                      className: "sr-only"
                                    }, "Use setting"), React.createElement("span", {
                                      "aria-hidden": true,
                                      className: (
                                        enabled ? "translate-x-9" : "translate-x-0"
                                      ) + "\n            pointer-events-none inline-block h-[34px] w-[34px] rounded-full bg-white shadow-lg transform ring-0 transition ease-in-out duration-200"
                                    }));
                    })
                }));
}

var Switch = {
  make: Headless__Examples$Switch
};

function Headless__Examples$Disclosure(Props) {
  return React.createElement("div", {
              className: "w-full px-4 pt-16"
            }, React.createElement("div", {
                  className: "w-full max-w-md p-2 mx-auto bg-white rounded-2xl"
                }, React.createElement(React$1.Disclosure, {
                      children: (function (param) {
                          var _open = param.open;
                          return React.createElement(React.Fragment, undefined, React.createElement(React$1.Disclosure.Button, {
                                          className: "flex justify-between w-full px-4 py-2 text-sm font-medium text-left text-purple-900 bg-purple-100 rounded-lg hover:bg-purple-200 focus:outline-none focus-visible:ring focus-visible:ring-purple-500 focus-visible:ring-opacity-75",
                                          children: (function (param) {
                                              return React.createElement(React.Fragment, undefined, React.createElement("span", undefined, "What is your refund policy?"), React.createElement(Solid.ChevronUpIcon, {
                                                              className: (
                                                                _open ? "transform rotate-180" : ""
                                                              ) + " w-5 h-5 text-purple-500"
                                                            }));
                                            })
                                        }), React.createElement(React$1.Disclosure.Panel, {
                                          className: "px-4 pt-4 pb-2 text-sm text-gray-500",
                                          children: (function (param) {
                                              return "If you're unhappy with your purchase for any reason, email us\n                within 90 days and we'll refund you in full, no questions asked.";
                                            })
                                        }));
                        })
                    }), React.createElement(React$1.Disclosure, {
                      as: "div",
                      className: "mt-2",
                      children: (function (param) {
                          var _open = param.open;
                          return React.createElement(React.Fragment, undefined, React.createElement(React$1.Disclosure.Button, {
                                          className: "flex justify-between w-full px-4 py-2 text-sm font-medium text-left text-purple-900 bg-purple-100 rounded-lg hover:bg-purple-200 focus:outline-none focus-visible:ring focus-visible:ring-purple-500 focus-visible:ring-opacity-75",
                                          children: (function (param) {
                                              return React.createElement(React.Fragment, undefined, React.createElement("span", undefined, "Do you offer technical support?"), React.createElement(Solid.ChevronUpIcon, {
                                                              className: (
                                                                _open ? "transform rotate-180" : ""
                                                              ) + " w-5 h-5 text-purple-500"
                                                            }));
                                            })
                                        }), React.createElement(React$1.Disclosure.Panel, {
                                          className: "px-4 pt-4 pb-2 text-sm text-gray-500",
                                          children: (function (param) {
                                              return "No.";
                                            })
                                        }));
                        })
                    })));
}

var Disclosure = {
  make: Headless__Examples$Disclosure
};

function Headless__Examples$Dialog(Props) {
  var match = React.useState(function () {
        return true;
      });
  var setIsOpen = match[1];
  var closeModal = Curry._1(setIsOpen, (function (param) {
          return false;
        }));
  var openModal = Curry._1(setIsOpen, (function (param) {
          return true;
        }));
  return React.createElement(React.Fragment, undefined, React.createElement("div", {
                  className: "fixed inset-0 flex items-center justify-center"
                }, React.createElement("button", {
                      className: "px-4 py-2 text-sm font-medium text-white bg-black rounded-md bg-opacity-20 hover:bg-opacity-30 focus:outline-none focus-visible:ring-2 focus-visible:ring-white focus-visible:ring-opacity-75",
                      onClick: (function (param) {
                          return openModal;
                        })
                    }, "Open dialog")), React.createElement(React$1.Transition, {
                  as: "react.fragment",
                  show: match[0],
                  appear: true,
                  children: React.createElement(React$1.Dialog, {
                        onClose: (function (param) {
                            return closeModal;
                          }),
                        as: "div",
                        children: (function (param) {
                            return React.createElement("div", {
                                        className: "min-h-screen px-4 text-center"
                                      }, React.createElement(React$1.Transition.Child, {
                                            as: "Fragment",
                                            enter: "ease-out duration-300",
                                            enterFrom: "opacity-0",
                                            enterTo: "opacity-100",
                                            leave: "ease-in duration-200",
                                            leaveFrom: "opacity-100",
                                            leaveTo: "opacity-0",
                                            children: React.createElement(React$1.Dialog.Overlay, {
                                                  className: "fixed inset-0"
                                                })
                                          }), React.createElement("span", {
                                            "aria-hidden": true,
                                            className: "inline-block h-screen align-middle"
                                          }, "&#8203;"), React.createElement(React$1.Transition.Child, {
                                            as: "fragment",
                                            enter: "ease-out duration-300",
                                            enterFrom: "opacity-0 scale-95",
                                            enterTo: "opacity-100 scale-100",
                                            leave: "ease-in duration-200",
                                            leaveFrom: "opacity-100 scale-100",
                                            leaveTo: "opacity-0 scale-95",
                                            children: React.createElement("div", {
                                                  className: "inline-block w-full max-w-md p-6 my-8 overflow-hidden text-left align-middle transition-all transform bg-white shadow-xl rounded-2xl"
                                                }, React.createElement(React$1.Dialog.Title, {
                                                      as: "h3",
                                                      className: "text-lg font-medium leading-6 text-gray-900",
                                                      children: (function (param) {
                                                          return "Payment successful";
                                                        })
                                                    }), React.createElement("div", {
                                                      className: "mt-2"
                                                    }, React.createElement("p", {
                                                          className: "text-sm text-gray-500"
                                                        }, "Your payment has been successfully submitted. We\xe2\x80\x99ve sent you\n                    an email with all of the details of your order.")), React.createElement("div", {
                                                      className: "mt-4"
                                                    }, React.createElement("button", {
                                                          className: "inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-blue-100 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500",
                                                          onClick: (function (param) {
                                                              return closeModal;
                                                            })
                                                        }, "Got it, thanks!")))
                                          }));
                          }),
                        className: "fixed inset-0 z-10 overflow-y-auto"
                      })
                }));
}

var Dialog = {
  make: Headless__Examples$Dialog
};

function Headless__Examples$Popover$IconOne(Props) {
  var ariaHidden = Props.ariaHidden;
  return React.createElement("svg", {
              "aria-hidden": ariaHidden,
              height: "48",
              width: "48",
              fill: "none",
              viewBox: "0 0 48 48",
              xmlns: "http://www.w3.org/2000/svg"
            }, React.createElement("rect", {
                  height: "48",
                  width: "48",
                  fill: "#FFEDD5",
                  rx: "8"
                }), React.createElement("path", {
                  d: "M24 11L35.2583 17.5V30.5L24 37L12.7417 30.5V17.5L24 11Z",
                  stroke: "#FB923C",
                  strokeWidth: "2"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M16.7417 19.8094V28.1906L24 32.3812L31.2584 28.1906V19.8094L24 15.6188L16.7417 19.8094Z",
                  fillRule: "evenodd",
                  stroke: "#FDBA74",
                  strokeWidth: "2"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M20.7417 22.1196V25.882L24 27.7632L27.2584 25.882V22.1196L24 20.2384L20.7417 22.1196Z",
                  fillRule: "evenodd",
                  stroke: "#FDBA74",
                  strokeWidth: "2"
                }));
}

var IconOne = {
  make: Headless__Examples$Popover$IconOne
};

function Headless__Examples$Popover$IconTwo(Props) {
  var ariaHidden = Props.ariaHidden;
  return React.createElement("svg", {
              "aria-hidden": ariaHidden,
              height: "48",
              width: "48",
              fill: "none",
              viewBox: "0 0 48 48",
              xmlns: "http://www.w3.org/2000/svg"
            }, React.createElement("rect", {
                  height: "48",
                  width: "48",
                  fill: "#FFEDD5",
                  rx: "8"
                }), React.createElement("path", {
                  d: "M28.0413 20L23.9998 13L19.9585 20M32.0828 27.0001L36.1242 34H28.0415M19.9585 34H11.8755L15.9171 27",
                  stroke: "#FB923C",
                  strokeWidth: "2"
                }), React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M18.804 30H29.1963L24.0001 21L18.804 30Z",
                  fillRule: "evenodd",
                  stroke: "#FDBA74",
                  strokeWidth: "2"
                }));
}

var IconTwo = {
  make: Headless__Examples$Popover$IconTwo
};

function Headless__Examples$Popover$IconThree(Props) {
  var ariaHidden = Props.ariaHidden;
  return React.createElement("svg", {
              "aria-hidden": ariaHidden,
              height: "48",
              width: "48",
              fill: "none",
              viewBox: "0 0 48 48",
              xmlns: "http://www.w3.org/2000/svg"
            }, React.createElement("rect", {
                  height: "48",
                  width: "48",
                  fill: "#FFEDD5",
                  rx: "8"
                }), React.createElement("rect", {
                  height: "4",
                  width: "2",
                  fill: "#FDBA74",
                  x: "13",
                  y: "32"
                }), React.createElement("rect", {
                  height: "8",
                  width: "2",
                  fill: "#FDBA74",
                  x: "17",
                  y: "28"
                }), React.createElement("rect", {
                  height: "12",
                  width: "2",
                  fill: "#FDBA74",
                  x: "21",
                  y: "24"
                }), React.createElement("rect", {
                  height: "16",
                  width: "2",
                  fill: "#FDBA74",
                  x: "25",
                  y: "20"
                }), React.createElement("rect", {
                  height: "20",
                  width: "2",
                  fill: "#FB923C",
                  x: "29",
                  y: "16"
                }), React.createElement("rect", {
                  height: "24",
                  width: "2",
                  fill: "#FB923C",
                  x: "33",
                  y: "12"
                }));
}

var IconThree = {
  make: Headless__Examples$Popover$IconThree
};

var solutions = [
  {
    name: "Insights",
    description: "Measure actions your users take",
    href: "##",
    icon: (function (ariaHidden) {
        return React.createElement(Headless__Examples$Popover$IconOne, {
                    ariaHidden: ariaHidden
                  });
      })
  },
  {
    name: "Automations",
    description: "Create your own targeted content",
    href: "##",
    icon: (function (ariaHidden) {
        return React.createElement(Headless__Examples$Popover$IconTwo, {
                    ariaHidden: ariaHidden
                  });
      })
  },
  {
    name: "Reports",
    description: "Keep track of your growth",
    href: "##",
    icon: (function (ariaHidden) {
        return React.createElement(Headless__Examples$Popover$IconThree, {
                    ariaHidden: ariaHidden
                  });
      })
  }
];

function Headless__Examples$Popover(Props) {
  return React.createElement("div", {
              className: "w-full max-w-sm px-4 fixed top-16"
            }, React.createElement(React$1.Popover, {
                  className: "relative",
                  children: (function (param) {
                      var _open = param.open;
                      return React.createElement(React.Fragment, undefined, React.createElement(React$1.Popover.Button, {
                                      className: "\n                " + (
                                        _open ? "" : "text-opacity-90"
                                      ) + "\n                text-white group bg-orange-700 px-3 py-2 rounded-md inline-flex items-center text-base font-medium hover:text-opacity-100 focus:outline-none focus-visible:ring-2 focus-visible:ring-white focus-visible:ring-opacity-75",
                                      children: (function (param) {
                                          return React.createElement(React.Fragment, undefined, React.createElement("span", undefined, "Solutions"), React.createElement(Solid.ChevronDownIcon, {
                                                          className: (
                                                            _open ? "" : "text-opacity-70"
                                                          ) + "\n                  ml-2 h-5 w-5 text-orange-300 group-hover:text-opacity-80 transition ease-in-out duration-150",
                                                          ariaHidden: true
                                                        }));
                                        })
                                    }), React.createElement(React$1.Transition, {
                                      as: "div",
                                      enter: "transition ease-out duration-200",
                                      enterFrom: "opacity-0 translate-y-1",
                                      enterTo: "opacity-100 translate-y-0",
                                      leave: "transition ease-in duration-150",
                                      leaveFrom: "opacity-100 translate-y-0",
                                      leaveTo: "opacity-0 translate-y-1",
                                      children: React.createElement(React$1.Popover.Panel, {
                                            className: "absolute z-10 w-screen max-w-sm px-4 mt-3 transform -translate-x-1/2 left-1/2 sm:px-0 lg:max-w-3xl",
                                            children: (function (param) {
                                                return React.createElement("div", {
                                                            className: "overflow-hidden rounded-lg shadow-lg ring-1 ring-black ring-opacity-5"
                                                          }, React.createElement("div", {
                                                                className: "relative grid gap-8 bg-white p-7 lg:grid-cols-2"
                                                              }, solutions.map(function (item) {
                                                                    return React.createElement(React.Fragment, undefined, React.createElement("a", {
                                                                                    key: item.name,
                                                                                    className: "flex items-center p-2 -m-3 transition duration-150 ease-in-out rounded-lg hover:bg-gray-50 focus:outline-none focus-visible:ring focus-visible:ring-orange-500 focus-visible:ring-opacity-50",
                                                                                    href: item.href
                                                                                  }, React.createElement("div", {
                                                                                        className: "flex items-center justify-center flex-shrink-0 w-10 h-10 text-white sm:h-12 sm:w-12"
                                                                                      }, Curry._1(item.icon, true)), React.createElement("div", {
                                                                                        className: "ml-4"
                                                                                      }, React.createElement("p", {
                                                                                            className: "text-sm font-medium text-gray-900"
                                                                                          }, item.name), React.createElement("p", {
                                                                                            className: "text-sm text-gray-500"
                                                                                          }, item.description))));
                                                                  })), React.createElement("div", {
                                                                className: "p-4 bg-gray-50"
                                                              }, React.createElement("a", {
                                                                    className: "flow-root px-2 py-2 transition duration-150 ease-in-out rounded-md hover:bg-gray-100 focus:outline-none focus-visible:ring focus-visible:ring-orange-500 focus-visible:ring-opacity-50",
                                                                    href: "##"
                                                                  }, React.createElement("span", {
                                                                        className: "flex items-center"
                                                                      }, React.createElement("span", {
                                                                            className: "text-sm font-medium text-gray-900"
                                                                          }, "Documentation")), React.createElement("span", {
                                                                        className: "block text-sm text-gray-500"
                                                                      }, "Start integrating products and tools"))));
                                              })
                                          })
                                    }));
                    })
                }));
}

var Popover = {
  IconOne: IconOne,
  IconTwo: IconTwo,
  IconThree: IconThree,
  solutions: solutions,
  make: Headless__Examples$Popover
};

var plans = [
  {
    name: "Startup",
    ram: "12GB",
    cpus: "6 CPUs",
    disk: "160 GB SSD disk"
  },
  {
    name: "Business",
    ram: "16GB",
    cpus: "8 CPUs",
    disk: "512 GB SSD disk"
  },
  {
    name: "Enterprise",
    ram: "32GB",
    cpus: "12 CPUs",
    disk: "1024 GB SSD disk"
  }
];

function Headless__Examples$RadioGroup$CheckIcon(Props) {
  var classNameOpt = Props.className;
  var className = classNameOpt !== undefined ? classNameOpt : "";
  return React.createElement("svg", {
              className: className,
              fill: "none",
              viewBox: "0 0 24 24"
            }, React.createElement("circle", {
                  cx: "12",
                  cy: "12",
                  fill: "#fff",
                  opacity: "0.2",
                  r: "12"
                }), React.createElement("path", {
                  d: "M7 13l3 3 7-7",
                  stroke: "#fff",
                  strokeLinecap: "round",
                  strokeLinejoin: "round",
                  strokeWidth: "1.5"
                }));
}

var CheckIcon = {
  make: Headless__Examples$RadioGroup$CheckIcon
};

function Headless__Examples$RadioGroup(Props) {
  var match = React.useState(function () {
        return Caml_array.get(plans, 0);
      });
  var setSelected = match[1];
  var radioArray = plans.map(function (plan) {
        return React.createElement(React$1.RadioGroup.Option, {
                    value: plan,
                    className: (function (param) {
                        return (
                                param.active ? "ring-2 ring-offset-2 ring-offset-sky-300 ring-white ring-opacity-60" : ""
                              ) + "\n          " + (
                                param.checked ? "bg-sky-900 bg-opacity-75 text-white" : "bg-white"
                              ) + "\n            relative rounded-lg shadow-md px-5 py-4 cursor-pointer flex focus:outline-none";
                      }),
                    children: (function (param) {
                        var checked = param.checked;
                        return React.createElement(React.Fragment, undefined, React.createElement("div", {
                                        className: "flex items-center justify-between w-full"
                                      }, React.createElement("div", {
                                            className: "flex items-center"
                                          }, React.createElement("div", {
                                                className: "text-sm"
                                              }, React.createElement(React$1.RadioGroup.Label, {
                                                    as: "p",
                                                    className: "font-medium  " + (
                                                      checked ? "text-white" : "text-gray-900"
                                                    ),
                                                    children: plan.name
                                                  }), React.createElement(React$1.RadioGroup.Description, {
                                                    as: "span",
                                                    className: "inline " + (
                                                      checked ? "text-sky-100" : "text-gray-500"
                                                    ),
                                                    children: null
                                                  }, React.createElement("span", undefined, plan.ram + "/" + plan.cpus), " ", React.createElement("span", {
                                                        "aria-hidden": true
                                                      }, "&middot;"), " ", React.createElement("span", undefined, plan.disk)))), checked ? React.createElement("div", {
                                              className: "flex-shrink-0 text-white"
                                            }, React.createElement(Headless__Examples$RadioGroup$CheckIcon, {
                                                  className: "w-6 h-6"
                                                })) : null));
                      }),
                    key: plan.name
                  });
      });
  return React.createElement("div", {
              className: "w-full px-4 py-16"
            }, React.createElement("div", {
                  className: "w-full max-w-md mx-auto"
                }, React.createElement(React$1.RadioGroup, {
                      value: match[0],
                      onChange: (function (val) {
                          return Curry._1(setSelected, (function (param) {
                                        return val;
                                      }));
                        }),
                      children: null
                    }, React.createElement(React$1.RadioGroup.Label, {
                          className: "sr-only",
                          children: "Server size"
                        }), React.createElement("div", {
                          className: "space-y-2"
                        }, radioArray))));
}

var RadioGroup = {
  plans: plans,
  CheckIcon: CheckIcon,
  make: Headless__Examples$RadioGroup
};

function Headless__Examples$Tabs(Props) {
  var match = React.useState(function () {
        return {
                recent: [
                  {
                    id: 1,
                    title: "Does drinking coffee make you smarter?",
                    date: "5h ago",
                    commentCount: 5,
                    shareCount: 2
                  },
                  {
                    id: 2,
                    title: "So you've bought coffee... now what?",
                    date: "2h ago",
                    commentCount: 3,
                    shareCount: 2
                  }
                ],
                popular: [
                  {
                    id: 1,
                    title: "Is tech making coffee better or worse?",
                    date: "Jan 7",
                    commentCount: 29,
                    shareCount: 16
                  },
                  {
                    id: 2,
                    title: "The most innovative things happening in coffee",
                    date: "Mar 19",
                    commentCount: 24,
                    shareCount: 12
                  }
                ],
                trending: [
                  {
                    id: 1,
                    title: "Ask Me Anything: 10 answers to your questions about coffee",
                    date: "2d ago",
                    commentCount: 9,
                    shareCount: 5
                  },
                  {
                    id: 2,
                    title: "The worst advice we've ever heard about coffee",
                    date: "4d ago",
                    commentCount: 1,
                    shareCount: 2
                  }
                ]
              };
      });
  var categories = match[0];
  var categories$1 = [
    [
      "Recent",
      categories.recent
    ],
    [
      "Popular",
      categories.popular
    ],
    [
      "Trending",
      categories.trending
    ]
  ];
  var catArray = categories$1.map(function (category) {
        var key = category[0];
        return React.createElement(React$1.Tab, {
                    className: (function (param) {
                        return " w-full py-2.5 text-sm leading-5 font-medium text-blue-700 rounded-lg focus:outline-none focus:ring-2 ring-offset-2 ring-offset-blue-400 ring-white ring-opacity-60\n            " + (
                                param.selected ? "bg-white shadow" : "text-blue-100 hover:bg-white/[0.12] hover:text-white"
                              );
                      }),
                    children: (function (param) {
                        return key;
                      }),
                    key: key
                  });
      });
  var tabPanel = categories$1.map(function (tuple) {
        var posts = tuple[1];
        return React.createElement(React$1.Tab.Panel, {
                    className: "bg-white rounded-xl p-3 focus:outline-none focus:ring-2 ring-offset-2 ring-offset-blue-400 ring-white ring-opacity-60",
                    children: (function (param) {
                        return React.createElement("ul", undefined, posts.map(function (post) {
                                        return React.createElement("li", {
                                                    key: String(post.id),
                                                    className: "relative p-3 rounded-md hover:bg-coolGray-100"
                                                  }, React.createElement("h3", {
                                                        className: "text-sm font-medium leading-5"
                                                      }, post.title), React.createElement("ul", {
                                                        className: "flex mt-1 space-x-1 text-xs font-normal leading-4 text-coolGray-500"
                                                      }, React.createElement("li", undefined, post.date), React.createElement("li", undefined, "&middot;"), React.createElement("li", undefined, String(post.commentCount) + " comments"), React.createElement("li", undefined, "&middot;"), React.createElement("li", undefined, String(post.shareCount) + " shares")), React.createElement("a", {
                                                        className: "absolute inset-0 rounded-md focus:z-10 focus:outline-none focus:ring-2 ring-blue-400",
                                                        href: "#"
                                                      }));
                                      }));
                      }),
                    key: tuple[0]
                  });
      });
  return React.createElement("div", {
              className: "w-full max-w-md px-2 py-16 sm:px-0"
            }, React.createElement(React$1.Tab.Group, {
                  children: (function (param) {
                      return React.createElement(React.Fragment, undefined, React.createElement(React$1.Tab.List, {
                                      className: "flex p-1 space-x-1 bg-blue-900/20 rounded-xl",
                                      children: (function (param) {
                                          return catArray;
                                        })
                                    }), React.createElement(React$1.Tab.Panels, {
                                      className: "mt-2",
                                      children: (function (param) {
                                          return tabPanel;
                                        })
                                    }));
                    })
                }));
}

var Tabs = {
  make: Headless__Examples$Tabs
};

var flexWrapper = Tailwind$IsenseiMonorepo.twStyle([
      Tailwind$IsenseiMonorepo.flex,
      Tailwind$IsenseiMonorepo.itemsCenter,
      Tailwind$IsenseiMonorepo.justifyCenter,
      Tailwind$IsenseiMonorepo.p({
            NAME: "all",
            VAL: 12
          })
    ]);

var wrapper2 = Tailwind$IsenseiMonorepo.twStyle([
      Tailwind$IsenseiMonorepo.relative,
      Tailwind$IsenseiMonorepo.inlineBlock,
      Tailwind$IsenseiMonorepo.textLeft
    ]);

var buttonWrapper = Tailwind$IsenseiMonorepo.twStyle([
      Tailwind$IsenseiMonorepo.rounded({
            NAME: "all",
            VAL: "md"
          }),
      Tailwind$IsenseiMonorepo.shadow({
            NAME: "sm",
            VAL: "black"
          })
    ]);

var button$1 = Tailwind$IsenseiMonorepo.twStyle([
      Tailwind$IsenseiMonorepo.inlineFlex,
      Tailwind$IsenseiMonorepo.justifyCenter,
      Tailwind$IsenseiMonorepo.w("full"),
      Tailwind$IsenseiMonorepo.p({
            NAME: "x",
            VAL: 4
          }),
      Tailwind$IsenseiMonorepo.p({
            NAME: "y",
            VAL: 2
          }),
      Tailwind$IsenseiMonorepo.textSize("sm"),
      Tailwind$IsenseiMonorepo.fontWeight(500),
      Tailwind$IsenseiMonorepo.leading(5),
      Tailwind$IsenseiMonorepo.textColor(undefined, "gray700"),
      Tailwind$IsenseiMonorepo.bg(undefined, "white"),
      Tailwind$IsenseiMonorepo.borderWidth({
            NAME: "all",
            VAL: 1
          }),
      Tailwind$IsenseiMonorepo.borderColor({
            NAME: "all",
            VAL: "gray300"
          }),
      Tailwind$IsenseiMonorepo.rounded({
            NAME: "all",
            VAL: "md"
          }),
      Tailwind$IsenseiMonorepo.hover([Tailwind$IsenseiMonorepo.textColor(undefined, "gray500")]),
      Tailwind$IsenseiMonorepo.focus([
            Tailwind$IsenseiMonorepo.outlineNone,
            Tailwind$IsenseiMonorepo.borderColor({
                  NAME: "all",
                  VAL: "blue300"
                })
          ]),
      Tailwind$IsenseiMonorepo.active([
            Tailwind$IsenseiMonorepo.bg(undefined, "gray50"),
            Tailwind$IsenseiMonorepo.textColor(undefined, "gray800")
          ])
    ]);

var svg = Tailwind$IsenseiMonorepo.twStyle([
      Tailwind$IsenseiMonorepo.w(5),
      Tailwind$IsenseiMonorepo.h(5),
      Tailwind$IsenseiMonorepo.m({
            NAME: "l",
            VAL: 2
          }),
      Tailwind$IsenseiMonorepo.m({
            NAME: "r",
            VAL: {
              NAME: "px",
              VAL: -4
            }
          })
    ]);

var items = Tailwind$IsenseiMonorepo.twStyle([
      Tailwind$IsenseiMonorepo.absolute,
      Tailwind$IsenseiMonorepo.right(0),
      Tailwind$IsenseiMonorepo.w(56),
      Tailwind$IsenseiMonorepo.m({
            NAME: "t",
            VAL: 2
          }),
      Tailwind$IsenseiMonorepo.originTopRight,
      Tailwind$IsenseiMonorepo.bg(undefined, "white"),
      Tailwind$IsenseiMonorepo.borderWidth({
            NAME: "all",
            VAL: 1
          }),
      Tailwind$IsenseiMonorepo.borderColor({
            NAME: "all",
            VAL: "gray200"
          }),
      Tailwind$IsenseiMonorepo.divide({
            NAME: "y",
            VAL: [
              1,
              "gray100"
            ]
          }),
      Tailwind$IsenseiMonorepo.rounded({
            NAME: "all",
            VAL: "md"
          }),
      Tailwind$IsenseiMonorepo.shadow({
            NAME: "lg",
            VAL: "black"
          }),
      Tailwind$IsenseiMonorepo.outlineNone
    ]);

var itemsHeader = Tailwind$IsenseiMonorepo.twStyle([
      Tailwind$IsenseiMonorepo.p({
            NAME: "x",
            VAL: 4
          }),
      Tailwind$IsenseiMonorepo.p({
            NAME: "y",
            VAL: 3
          })
    ]);

var par = Tailwind$IsenseiMonorepo.twStyle([
      Tailwind$IsenseiMonorepo.textSize("sm"),
      Tailwind$IsenseiMonorepo.leading(5)
    ]);

var pBold = Tailwind$IsenseiMonorepo.merge([
      par,
      Tailwind$IsenseiMonorepo.twStyle([
            Tailwind$IsenseiMonorepo.fontWeight(500),
            Tailwind$IsenseiMonorepo.textColor(undefined, "gray900")
          ])
    ]);

var itemContainer = Tailwind$IsenseiMonorepo.twStyle([Tailwind$IsenseiMonorepo.p({
            NAME: "y",
            VAL: 1
          })]);

var itemStyles = Tailwind$IsenseiMonorepo.twStyle([
      Tailwind$IsenseiMonorepo.flex,
      Tailwind$IsenseiMonorepo.justifyBetween,
      Tailwind$IsenseiMonorepo.w("full"),
      Tailwind$IsenseiMonorepo.p({
            NAME: "x",
            VAL: 4
          }),
      Tailwind$IsenseiMonorepo.p({
            NAME: "y",
            VAL: 2
          }),
      Tailwind$IsenseiMonorepo.textSize("sm"),
      Tailwind$IsenseiMonorepo.leading(5),
      Tailwind$IsenseiMonorepo.textLeft
    ]);

var activated = Tailwind$IsenseiMonorepo.twStyle([
      Tailwind$IsenseiMonorepo.bg(undefined, "gray100"),
      Tailwind$IsenseiMonorepo.textColor(undefined, "gray900")
    ]);

var notActive = Tailwind$IsenseiMonorepo.twStyle([Tailwind$IsenseiMonorepo.textColor(undefined, "gray700")]);

var disabled = Tailwind$IsenseiMonorepo.twStyle([
      Tailwind$IsenseiMonorepo.flex,
      Tailwind$IsenseiMonorepo.justifyBetween,
      Tailwind$IsenseiMonorepo.w("full"),
      Tailwind$IsenseiMonorepo.p({
            NAME: "x",
            VAL: 4
          }),
      Tailwind$IsenseiMonorepo.p({
            NAME: "y",
            VAL: 2
          }),
      Tailwind$IsenseiMonorepo.textSize("sm"),
      Tailwind$IsenseiMonorepo.leading(5),
      Tailwind$IsenseiMonorepo.textLeft,
      Tailwind$IsenseiMonorepo.textColor(undefined, "gray700"),
      Tailwind$IsenseiMonorepo.cursor("notAllowed"),
      Tailwind$IsenseiMonorepo.opacity(50)
    ]);

var Styles$1 = {
  flexWrapper: flexWrapper,
  wrapper2: wrapper2,
  buttonWrapper: buttonWrapper,
  button: button$1,
  svg: svg,
  items: items,
  itemsHeader: itemsHeader,
  par: par,
  pBold: pBold,
  itemContainer: itemContainer,
  itemStyles: itemStyles,
  activated: activated,
  notActive: notActive,
  disabled: disabled
};

function Headless__Examples$Menu(Props) {
  return React.createElement("div", {
              className: flexWrapper
            }, React.createElement("div", {
                  className: wrapper2
                }, React.createElement(React$1.Menu, {
                      children: (function (param) {
                          return React.createElement(React.Fragment, undefined, React.createElement("span", {
                                          className: buttonWrapper
                                        }, React.createElement(React$1.Menu.Button, {
                                              className: button$1,
                                              children: (function (param) {
                                                  return React.createElement(React.Fragment, undefined, React.createElement("span", undefined, "Options"), React.createElement("svg", {
                                                                  className: svg,
                                                                  fill: "currentColor",
                                                                  viewBox: "0 0 20 20"
                                                                }, React.createElement("path", {
                                                                      clipRule: "evenodd",
                                                                      d: "M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z",
                                                                      fillRule: "evenodd"
                                                                    })));
                                                })
                                            })), React.createElement(React$1.Transition, {
                                          show: param.open,
                                          enter: "transition ease-out duration-100",
                                          enterFrom: "transform opacity-0 scale-95",
                                          enterTo: "transform opacity-100 scale-100",
                                          leave: "transition ease-in duration-75",
                                          leaveFrom: "transform opacity-100 scale-100",
                                          leaveTo: "transform opacity-0 scale-95",
                                          children: React.createElement(React$1.Menu.Items, {
                                                static: true,
                                                className: items,
                                                children: (function (param) {
                                                    return React.createElement(React.Fragment, undefined, React.createElement("div", {
                                                                    className: itemsHeader
                                                                  }, React.createElement("p", {
                                                                        className: par
                                                                      }, "Signed in as"), React.createElement("p", {
                                                                        className: pBold
                                                                      }, "tom@example.com")), React.createElement("div", {
                                                                    className: itemContainer
                                                                  }, React.createElement(React$1.Menu.Item, {
                                                                        children: (function (param) {
                                                                            return React.createElement("a", {
                                                                                        className: Tailwind$IsenseiMonorepo.merge([
                                                                                              itemStyles,
                                                                                              param.active ? activated : notActive
                                                                                            ]),
                                                                                        href: "#account-settings"
                                                                                      }, "Account settings");
                                                                          })
                                                                      }), React.createElement(React$1.Menu.Item, {
                                                                        children: (function (param) {
                                                                            return React.createElement("a", {
                                                                                        className: Tailwind$IsenseiMonorepo.merge([
                                                                                              itemStyles,
                                                                                              param.active ? activated : notActive
                                                                                            ]),
                                                                                        href: "#support"
                                                                                      }, "Support");
                                                                          })
                                                                      }), React.createElement(React$1.Menu.Item, {
                                                                        as: "span",
                                                                        disabled: true,
                                                                        className: disabled,
                                                                        children: (function (param) {
                                                                            return "New feature soon";
                                                                          })
                                                                      }), React.createElement(React$1.Menu.Item, {
                                                                        children: (function (param) {
                                                                            return React.createElement("a", {
                                                                                        className: Tailwind$IsenseiMonorepo.merge([
                                                                                              itemStyles,
                                                                                              param.active ? activated : notActive
                                                                                            ]),
                                                                                        href: "#license"
                                                                                      }, "License");
                                                                          })
                                                                      })), React.createElement("div", {
                                                                    className: itemContainer
                                                                  }, React.createElement(React$1.Menu.Item, {
                                                                        children: (function (param) {
                                                                            return React.createElement("a", {
                                                                                        className: Tailwind$IsenseiMonorepo.merge([
                                                                                              itemStyles,
                                                                                              param.active ? activated : notActive
                                                                                            ]),
                                                                                        href: "#sign-out"
                                                                                      }, "Sign out");
                                                                          })
                                                                      })));
                                                  })
                                              })
                                        }));
                        })
                    })));
}

var Menu = {
  Styles: Styles$1,
  make: Headless__Examples$Menu
};

export {
  EditInactiveIcon ,
  EditActiveIcon ,
  DuplicateInactiveIcon ,
  DuplicateActiveIcon ,
  ArchiveInactiveIcon ,
  ArchiveActiveIcon ,
  MoveInactiveIcon ,
  MoveActiveIcon ,
  DeleteInactiveIcon ,
  DeleteActiveIcon ,
  Dropdown ,
  Listbox ,
  Switch ,
  Disclosure ,
  Dialog ,
  Popover ,
  RadioGroup ,
  Tabs ,
  Menu ,
  
}
/* div Not a pure module */
