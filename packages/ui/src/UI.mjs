// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Solid from "@heroicons/react/solid";
import * as Tip__UI$IsenseiMonorepo from "./Tip__UI.mjs";
import * as Tailwind$IsenseiMonorepo from "../../tailwind/src/Tailwind.mjs";
import * as Button__UI$IsenseiMonorepo from "./Button__UI.mjs";
import * as Headless__Examples$IsenseiMonorepo from "./Headless__Examples.mjs";

var tipGood = Tip__UI$IsenseiMonorepo.TipGood.make;

var tipBad = Tip__UI$IsenseiMonorepo.TipBad.make;

var tipCompat = Tip__UI$IsenseiMonorepo.TipCompat.make;

var tipInfo = Tip__UI$IsenseiMonorepo.TipInfo.make;

var menu = Headless__Examples$IsenseiMonorepo.Menu.make;

function dropdown(_as) {
  return React.createElement(Headless__Examples$IsenseiMonorepo.Dropdown.make, {
              as: _as
            });
}

var listbox = React.createElement(Headless__Examples$IsenseiMonorepo.Listbox.make, {});

var _switch = React.createElement(Headless__Examples$IsenseiMonorepo.Switch.make, {});

var disclosure = React.createElement(Headless__Examples$IsenseiMonorepo.Disclosure.make, {});

var popover = React.createElement(Headless__Examples$IsenseiMonorepo.Popover.make, {});

var dialog = React.createElement(Headless__Examples$IsenseiMonorepo.Dialog.make, {});

var radioGroup = React.createElement(Headless__Examples$IsenseiMonorepo.RadioGroup.make, {});

var tabs = Headless__Examples$IsenseiMonorepo.Tabs.make;

var div = Tailwind$IsenseiMonorepo.twStyle([
      Tailwind$IsenseiMonorepo.block,
      Tailwind$IsenseiMonorepo.maxW("xl"),
      Tailwind$IsenseiMonorepo.mxAuto,
      Tailwind$IsenseiMonorepo.rounded({
            NAME: "all",
            VAL: "lg"
          }),
      Tailwind$IsenseiMonorepo.p({
            NAME: "all",
            VAL: 6
          }),
      Tailwind$IsenseiMonorepo.bg(undefined, "white"),
      Tailwind$IsenseiMonorepo.ring(undefined, undefined, undefined, 1, "slate900", undefined),
      Tailwind$IsenseiMonorepo.shadow({
            NAME: "lg",
            VAL: "black"
          }),
      Tailwind$IsenseiMonorepo.space(undefined, {
            NAME: "y",
            VAL: 3
          }),
      Tailwind$IsenseiMonorepo.hover([
            Tailwind$IsenseiMonorepo.bg(undefined, "sky500"),
            Tailwind$IsenseiMonorepo.ring(undefined, undefined, undefined, 1, "sky500", undefined)
          ])
    ]);

var flex = Tailwind$IsenseiMonorepo.twStyle([
      Tailwind$IsenseiMonorepo.flex,
      Tailwind$IsenseiMonorepo.itemsCenter,
      Tailwind$IsenseiMonorepo.space(undefined, {
            NAME: "x",
            VAL: 3
          })
    ]);

function heading(isHovered) {
  return Tailwind$IsenseiMonorepo.twStyle([
              Tailwind$IsenseiMonorepo.textColor(undefined, "slate900"),
              Tailwind$IsenseiMonorepo.textSize("sm"),
              Tailwind$IsenseiMonorepo.fontWeight(600),
              isHovered ? Tailwind$IsenseiMonorepo.textColor(undefined, "white") : Tailwind$IsenseiMonorepo.emptyRule
            ]);
}

function p(isHovered) {
  return Tailwind$IsenseiMonorepo.twStyle([
              Tailwind$IsenseiMonorepo.textColor(undefined, "slate500"),
              isHovered ? Tailwind$IsenseiMonorepo.textColor(undefined, "white") : Tailwind$IsenseiMonorepo.emptyRule,
              Tailwind$IsenseiMonorepo.textSize("sm")
            ]);
}

function svg(isHovered) {
  return Tailwind$IsenseiMonorepo.twStyle([
              Tailwind$IsenseiMonorepo.h(6),
              Tailwind$IsenseiMonorepo.w(6),
              Tailwind$IsenseiMonorepo.textColor(undefined, "sky500"),
              Tailwind$IsenseiMonorepo.stroke("sky500"),
              isHovered ? Tailwind$IsenseiMonorepo.stroke("white") : Tailwind$IsenseiMonorepo.emptyRule
            ]);
}

var Styles = {
  div: div,
  flex: flex,
  heading: heading,
  p: p,
  svg: svg
};

function UI$Card(Props) {
  var match = React.useState(function () {
        return false;
      });
  var setHoverState = match[1];
  var hoverState = match[0];
  var onMouseEnter = function (param) {
    return Curry._1(setHoverState, (function (param) {
                  return true;
                }));
  };
  var onMouseLeave = function (param) {
    return Curry._1(setHoverState, (function (param) {
                  return false;
                }));
  };
  return React.createElement("div", {
              className: div,
              onMouseEnter: onMouseEnter,
              onMouseLeave: onMouseLeave
            }, React.createElement("div", {
                  className: flex
                }, React.createElement(Solid.FolderAddIcon, {
                      className: svg(hoverState)
                    }), React.createElement("h3", {
                      className: heading(hoverState)
                    }, "New project")), React.createElement("p", {
                  className: p(hoverState)
                }, "Create a new project from a variety of starting templates."));
}

var Card = {
  Styles: Styles,
  make: UI$Card
};

var btn = Button__UI$IsenseiMonorepo.make;

var btn2 = Button__UI$IsenseiMonorepo.make;

export {
  btn ,
  btn2 ,
  tipGood ,
  tipBad ,
  tipCompat ,
  tipInfo ,
  menu ,
  dropdown ,
  listbox ,
  _switch ,
  disclosure ,
  popover ,
  dialog ,
  radioGroup ,
  tabs ,
  Card ,
  
}
/* listbox Not a pure module */
