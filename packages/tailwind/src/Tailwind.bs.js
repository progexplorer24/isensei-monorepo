// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Caml_format from "rescript/lib/es6/caml_format.js";
import * as CssJs$IsenseiMonorepo from "../../css/src/CssJs.bs.js";
import * as Theme$IsenseiMonorepo from "../../theme/src/Theme.bs.js";
import * as Selectors$IsenseiMonorepo from "../../selectors/src/Selectors.bs.js";
import * as Css_Js_Core$IsenseiMonorepo from "../../css/src/Css_Js_Core.bs.js";
import * as Css_AtomicTypes$IsenseiMonorepo from "../../css/src/Css_AtomicTypes.bs.js";

var emptyRule = [CssJs$IsenseiMonorepo.unsafe("", "")];

var tw = Belt_Array.concatMany;

function twStyle(rules) {
  return CssJs$IsenseiMonorepo.style(Belt_Array.concatMany(rules));
}

function minWBreakpoint(breakpoint, styles) {
  return [CssJs$IsenseiMonorepo.media("(min-width: " + String(breakpoint) + "px)", Belt_Array.concatMany(styles))];
}

function maxWBreakpoint(breakpoint, styles) {
  return [CssJs$IsenseiMonorepo.media("(max-width: " + String(breakpoint) + "px)", Belt_Array.concatMany(styles))];
}

function darkMedia(styles) {
  return [CssJs$IsenseiMonorepo.media("(prefers-color-scheme: dark)", Belt_Array.concatMany(styles))];
}

function portrait(styles) {
  return [CssJs$IsenseiMonorepo.media("(orientation: portrait)", Belt_Array.concatMany(styles))];
}

function landscape(styles) {
  return [CssJs$IsenseiMonorepo.media("(orientation: landscape)", Belt_Array.concatMany(styles))];
}

function motionSafe(styles) {
  return [CssJs$IsenseiMonorepo.media("(prefers-reduced-motion: no-preference)", Belt_Array.concatMany(styles))];
}

function motionReduce(styles) {
  return [CssJs$IsenseiMonorepo.media("(prefers-reduced-motion: reduce)", Belt_Array.concatMany(styles))];
}

function print(styles) {
  return [CssJs$IsenseiMonorepo.media("print", Belt_Array.concatMany(styles))];
}

function rtl(styles) {
  return [CssJs$IsenseiMonorepo.media("[dir=\xe2\x80\x9crtl\xe2\x80\x9d] &", Belt_Array.concatMany(styles))];
}

function ltr(styles) {
  return [CssJs$IsenseiMonorepo.media("[dir=\xe2\x80\x9cltr\xe2\x80\x9d] &", Belt_Array.concatMany(styles))];
}

function sm(param) {
            return minWBreakpoint(640, param);
}

function md(param) {
  return minWBreakpoint(768, param);
}

function lg(param) {
  return minWBreakpoint(1024, param);
}

function xl(param) {
  return minWBreakpoint(1280, param);
}

function xl2(param) {
  return minWBreakpoint(1536, param);
}

function fontFamilies(fonts) {
  return [CssJs$IsenseiMonorepo.fontFamilies(fonts)];
}

function fontName(font) {
  return [CssJs$IsenseiMonorepo.fontFamily({
                NAME: "custom",
                VAL: font
              })];
}

function selector(string, rules) {
  return [CssJs$IsenseiMonorepo.selector(string, Belt_Array.concatMany(rules))];
}

function dividers(rules) {
  return [CssJs$IsenseiMonorepo.selector(Selectors$IsenseiMonorepo.ignoreFirstChild, Belt_Array.concatMany(rules))];
}

function dark(rules) {
  return [CssJs$IsenseiMonorepo.selector(".dark &", Belt_Array.concatMany(rules))];
}

function active(rules) {
  return [CssJs$IsenseiMonorepo.active(Belt_Array.concatMany(rules))];
}

function checked(rules) {
  return [CssJs$IsenseiMonorepo.checked(Belt_Array.concatMany(rules))];
}

function $$default(rules) {
  return [CssJs$IsenseiMonorepo.$$default(Belt_Array.concatMany(rules))];
}

function defined(rules) {
  return [CssJs$IsenseiMonorepo.defined(Belt_Array.concatMany(rules))];
}

function disabled(rules) {
  return [CssJs$IsenseiMonorepo.disabled(Belt_Array.concatMany(rules))];
}

function empty(rules) {
  return [CssJs$IsenseiMonorepo.empty(Belt_Array.concatMany(rules))];
}

function enabled(rules) {
  return [CssJs$IsenseiMonorepo.enabled(Belt_Array.concatMany(rules))];
}

function first(rules) {
  return [CssJs$IsenseiMonorepo.firstChild(Belt_Array.concatMany(rules))];
}

function firstOfType(rules) {
  return [CssJs$IsenseiMonorepo.firstOfType(Belt_Array.concatMany(rules))];
}

function focus(rules) {
  return [CssJs$IsenseiMonorepo.focus(Belt_Array.concatMany(rules))];
}

function focusWithin(rules) {
  return [CssJs$IsenseiMonorepo.focusWithin(Belt_Array.concatMany(rules))];
}

function focusVisible(rules) {
  return [CssJs$IsenseiMonorepo.focusVisible(Belt_Array.concatMany(rules))];
}

function odd(rules) {
  return [CssJs$IsenseiMonorepo.selector("&:nth-child(odd)", Belt_Array.concatMany(rules))];
}

function even(rules) {
  return [CssJs$IsenseiMonorepo.selector("&:nth-child(even)", Belt_Array.concatMany(rules))];
}

function placeholderShown(rules) {
  return [CssJs$IsenseiMonorepo.selector("&:placeholder-shown", Belt_Array.concatMany(rules))];
}

function autofill(rules) {
  return [CssJs$IsenseiMonorepo.selector("&:autofill", Belt_Array.concatMany(rules))];
}

function _open(rules) {
  return [CssJs$IsenseiMonorepo.selector("&[open]", Belt_Array.concatMany(rules))];
}

function hover(rules) {
  return [CssJs$IsenseiMonorepo.hover(Belt_Array.concatMany(rules))];
}

function indeterminate(rules) {
  return [CssJs$IsenseiMonorepo.indeterminate(Belt_Array.concatMany(rules))];
}

function inRange(rules) {
  return [CssJs$IsenseiMonorepo.inRange(Belt_Array.concatMany(rules))];
}

function invalid(rules) {
  return [CssJs$IsenseiMonorepo.invalid(Belt_Array.concatMany(rules))];
}

function last(rules) {
  return [CssJs$IsenseiMonorepo.lastChild(Belt_Array.concatMany(rules))];
}

function lastOfType(rules) {
  return [CssJs$IsenseiMonorepo.lastOfType(Belt_Array.concatMany(rules))];
}

function link(rules) {
  return [CssJs$IsenseiMonorepo.lastOfType(Belt_Array.concatMany(rules))];
}

function only(rules) {
  return [CssJs$IsenseiMonorepo.onlyChild(Belt_Array.concatMany(rules))];
}

function onlyOfType(rules) {
  return [CssJs$IsenseiMonorepo.onlyOfType(Belt_Array.concatMany(rules))];
}

function optional(rules) {
  return [CssJs$IsenseiMonorepo.optional(Belt_Array.concatMany(rules))];
}

function outOfRange(rules) {
  return [CssJs$IsenseiMonorepo.outOfRange(Belt_Array.concatMany(rules))];
}

function readOnly(rules) {
  return [CssJs$IsenseiMonorepo.readOnly(Belt_Array.concatMany(rules))];
}

function readWrite(rules) {
  return [CssJs$IsenseiMonorepo.readWrite(Belt_Array.concatMany(rules))];
}

function required(rules) {
  return [CssJs$IsenseiMonorepo.required(Belt_Array.concatMany(rules))];
}

function root(rules) {
  return [CssJs$IsenseiMonorepo.root(Belt_Array.concatMany(rules))];
}

function scope(rules) {
  return [CssJs$IsenseiMonorepo.scope(Belt_Array.concatMany(rules))];
}

function target(rules) {
  return [CssJs$IsenseiMonorepo.target(Belt_Array.concatMany(rules))];
}

function valid(rules) {
  return [CssJs$IsenseiMonorepo.valid(Belt_Array.concatMany(rules))];
}

function visited(rules) {
  return [CssJs$IsenseiMonorepo.visited(Belt_Array.concatMany(rules))];
}

function after(rules) {
  return [CssJs$IsenseiMonorepo.after(Belt_Array.concatMany(rules))];
}

function before(rules) {
  return [CssJs$IsenseiMonorepo.before(Belt_Array.concatMany(rules))];
}

function firstLetter(rules) {
  return [CssJs$IsenseiMonorepo.firstLetter(Belt_Array.concatMany(rules))];
}

function firstLine(rules) {
  return [CssJs$IsenseiMonorepo.firstLine(Belt_Array.concatMany(rules))];
}

function selection(rules) {
  return [CssJs$IsenseiMonorepo.selection(Belt_Array.concatMany(rules))];
}

function marker(rules) {
  return [CssJs$IsenseiMonorepo.selector("&::marker", Belt_Array.concatMany(rules))];
}

function file(rules) {
  return [CssJs$IsenseiMonorepo.selector("&::file-selector-button", Belt_Array.concatMany(rules))];
}

function placeholder(rules) {
  return [CssJs$IsenseiMonorepo.selector("&::placeholder", Belt_Array.concatMany(rules))];
}

var aspectAuto = [CssJs$IsenseiMonorepo.unsafe("aspect-ration", "auto")];

var aspectSquare = [CssJs$IsenseiMonorepo.unsafe("aspect-ration", "1 / 1")];

var aspectVideo = [CssJs$IsenseiMonorepo.unsafe("aspect-ration", "16 / 9")];

function aspectCustom(width, height) {
  return [CssJs$IsenseiMonorepo.unsafe("aspect-ration", width + " / " + height)];
}

var container = [CssJs$IsenseiMonorepo.width({
        NAME: "percent",
        VAL: 100
      })];

var containerSm = [CssJs$IsenseiMonorepo.maxWidth({
        NAME: "px",
        VAL: 640
      })];

var containerMd = [CssJs$IsenseiMonorepo.maxWidth({
        NAME: "px",
        VAL: 768
      })];

var containerLg = [CssJs$IsenseiMonorepo.maxWidth({
        NAME: "px",
        VAL: 1024
      })];

var containerXl = [CssJs$IsenseiMonorepo.maxWidth({
        NAME: "px",
        VAL: 1280
      })];

var container2Xl = [CssJs$IsenseiMonorepo.maxWidth({
        NAME: "px",
        VAL: 1536
      })];

function toString(t) {
  if (t === 1) {
    return "1";
  } else if (t === 2) {
    return "2";
  } else if (t === 3) {
    return "3";
  } else if (t === 4) {
    return "4";
  } else if (t === 5) {
    return "5";
  } else if (t === 6) {
    return "6";
  } else if (t === 7) {
    return "7";
  } else if (t === 8) {
    return "8";
  } else if (t === 9) {
    return "9";
  } else if (t === 10) {
    return "10";
  } else if (t === 11) {
    return "11";
  } else if (t === 12) {
    return "12";
  } else if (t === "lg") {
    return "32rem";
  } else if (t === "md") {
    return "28rem";
  } else if (t === "sm") {
    return "24rem";
  } else if (t === "xl") {
    return "36rem";
  } else if (t === "xs") {
    return "20rem";
  } else if (t === "xl2") {
    return "42rem";
  } else if (t === "xl3") {
    return "48rem";
  } else if (t === "xl4") {
    return "56rem";
  } else if (t === "xl5") {
    return "64rem";
  } else if (t === "xl6") {
    return "72rem";
  } else if (t === "xl7") {
    return "80rem";
  } else if (t === "xs2") {
    return "18rem";
  } else if (t === "xs3") {
    return "16rem";
  } else {
    return "auto";
  }
}

var Columns = {
  toString: toString
};

function columns(val) {
  return [CssJs$IsenseiMonorepo.unsafe("columns", toString(val))];
}

function toString$1(breakType) {
  if (breakType === "column") {
    return "column";
  } else if (breakType === "left") {
    return "left";
  } else if (breakType === "page") {
    return "page";
  } else if (breakType === "right") {
    return "right";
  } else if (breakType === "all") {
    return "all";
  } else if (breakType === "avoidPage") {
    return "avoid-page";
  } else if (breakType === "avoid") {
    return "avoid";
  } else {
    return "auto";
  }
}

var BreakAfter = {
  toString: toString$1
};

function toString$2(breakType) {
  if (breakType === "avoidPage") {
    return "avoid-page";
  } else if (breakType === "avoidColumn") {
    return "avoid-column";
  } else if (breakType === "avoid") {
    return "avoid";
  } else {
    return "auto";
  }
}

var BreakInside = {
  toString: toString$2
};

function breakAfter(breakType) {
  return [CssJs$IsenseiMonorepo.unsafe("break-after", toString$1(breakType))];
}

function breakBefore(breakType) {
  return [CssJs$IsenseiMonorepo.unsafe("break-before", toString$1(breakType))];
}

function breakInside(breakType) {
  return [CssJs$IsenseiMonorepo.unsafe("break-inside", toString$2(breakType))];
}

function toString$3(t) {
  if (t === "slice") {
    return "slice";
  } else {
    return "clone";
  }
}

var BoxDecoration = {
  toString: toString$3
};

function boxDecoration($$break) {
  return [CssJs$IsenseiMonorepo.unsafe("box-decoration-break", toString$3($$break))];
}

var boxBorder = [CssJs$IsenseiMonorepo.boxSizing("borderBox")];

var boxContent = [CssJs$IsenseiMonorepo.boxSizing("contentBox")];

var block = [CssJs$IsenseiMonorepo.display("block")];

var inlineBlock = [CssJs$IsenseiMonorepo.display("inlineBlock")];

var inline = [CssJs$IsenseiMonorepo.display("inline")];

var flex = [CssJs$IsenseiMonorepo.display("flex")];

var inlineFlex = [CssJs$IsenseiMonorepo.display("inlineFlex")];

var table = [CssJs$IsenseiMonorepo.display("table")];

var inlineTable = [CssJs$IsenseiMonorepo.display("inlineTable")];

var tableCaption = [CssJs$IsenseiMonorepo.display("tableCaption")];

var tableCell = [CssJs$IsenseiMonorepo.display("tableCell")];

var tableColumn = [CssJs$IsenseiMonorepo.display("tableColumn")];

var tableColumnGroup = [CssJs$IsenseiMonorepo.display("tableColumnGroup")];

var tableFooterGroup = [CssJs$IsenseiMonorepo.display("tableFooterGroup")];

var tableHeaderGroup = [CssJs$IsenseiMonorepo.display("tableHeaderGroup")];

var tableRowGroup = [CssJs$IsenseiMonorepo.display("tableRowGroup")];

var tableRow = [CssJs$IsenseiMonorepo.display("tableRow")];

var flowRoot = [CssJs$IsenseiMonorepo.unsafe("CssJs.display", "flow-root")];

var grid = [CssJs$IsenseiMonorepo.display("grid")];

var inlineGrid = [CssJs$IsenseiMonorepo.display("inlineGrid")];

var contents = [CssJs$IsenseiMonorepo.display("contents")];

var listItem = [CssJs$IsenseiMonorepo.display("listItem")];

var hidden = [CssJs$IsenseiMonorepo.display("none")];

var floatRight = [CssJs$IsenseiMonorepo.$$float("right")];

var floatLeft = [CssJs$IsenseiMonorepo.$$float("left")];

var floatNone = [CssJs$IsenseiMonorepo.$$float("none")];

var clearLeft = [CssJs$IsenseiMonorepo.clear("left")];

var clearRight = [CssJs$IsenseiMonorepo.clear("right")];

var clearBoth = [CssJs$IsenseiMonorepo.clear("both")];

var clearNone = [CssJs$IsenseiMonorepo.clear("none")];

var isolate = [CssJs$IsenseiMonorepo.unsafe("isolation", "isolate")];

var isolateAuto = [CssJs$IsenseiMonorepo.unsafe("isolation", "auto")];

var objectContain = [CssJs$IsenseiMonorepo.objectFit("contain")];

var objectCover = [CssJs$IsenseiMonorepo.objectFit("cover")];

var objectFill = [CssJs$IsenseiMonorepo.objectFit("fill")];

var objectNone = [CssJs$IsenseiMonorepo.objectFit("none")];

var objectScaleDown = [CssJs$IsenseiMonorepo.objectFit("scaleDown")];

var objectBottom = [CssJs$IsenseiMonorepo.objectPosition("bottom")];

var objectCenter = [CssJs$IsenseiMonorepo.objectPosition("center")];

var objectLeft = [CssJs$IsenseiMonorepo.objectPosition("left")];

var objectLeftBottom = [CssJs$IsenseiMonorepo.objectPosition({
        NAME: "hv",
        VAL: [
          "left",
          "bottom"
        ]
      })];

var objectLeftTop = [CssJs$IsenseiMonorepo.objectPosition({
        NAME: "hv",
        VAL: [
          "left",
          "top"
        ]
      })];

var objectRight = [CssJs$IsenseiMonorepo.objectPosition("right")];

var objectRightBottom = [CssJs$IsenseiMonorepo.objectPosition({
        NAME: "hv",
        VAL: [
          "right",
          "bottom"
        ]
      })];

var objectRightTop = [CssJs$IsenseiMonorepo.objectPosition({
        NAME: "hv",
        VAL: [
          "right",
          "top"
        ]
      })];

var objectTop = [CssJs$IsenseiMonorepo.objectPosition("top")];

var overflowAuto = [CssJs$IsenseiMonorepo.overflow("auto")];

var overflowHidden = [CssJs$IsenseiMonorepo.overflow("hidden")];

var overflowClip = [CssJs$IsenseiMonorepo.unsafe("overflow", "clip")];

var overflowVisible = [CssJs$IsenseiMonorepo.overflow("visible")];

var overflowScroll = [CssJs$IsenseiMonorepo.overflow("scroll")];

var overflowXAuto = [CssJs$IsenseiMonorepo.overflowX("auto")];

var overflowYAuto = [CssJs$IsenseiMonorepo.overflowY("auto")];

var overflowXHidden = [CssJs$IsenseiMonorepo.overflowX("hidden")];

var overflowYHidden = [CssJs$IsenseiMonorepo.overflowY("hidden")];

var overflowXClip = [CssJs$IsenseiMonorepo.unsafe("overflowX", "clip")];

var overflowYClip = [CssJs$IsenseiMonorepo.unsafe("overflowY", "clip")];

var overflowXVisible = [CssJs$IsenseiMonorepo.overflowX("visible")];

var overflowYVisible = [CssJs$IsenseiMonorepo.overflowY("visible")];

var overflowXScroll = [CssJs$IsenseiMonorepo.overflowX("scroll")];

var overflowYScroll = [CssJs$IsenseiMonorepo.overflowY("scroll")];

var overscrollAuto = [CssJs$IsenseiMonorepo.unsafe("overscrollBehavior", "auto")];

var overscrollContain = [CssJs$IsenseiMonorepo.unsafe("overscrollBehavior", "contain")];

var overscrollNone = [CssJs$IsenseiMonorepo.unsafe("overscrollBehavior", "none")];

var overscrollYAuto = [CssJs$IsenseiMonorepo.unsafe("overscrollBehaviorY", "auto")];

var overscrollYContain = [CssJs$IsenseiMonorepo.unsafe("overscrollBehaviorY", "contain")];

var overscrollYNone = [CssJs$IsenseiMonorepo.unsafe("overscrollBehaviorY", "none")];

var overscrollXAuto = [CssJs$IsenseiMonorepo.unsafe("overscrollBehaviorX", "auto")];

var overscrollXContain = [CssJs$IsenseiMonorepo.unsafe("overscrollBehaviorX", "contain")];

var overscrollXNone = [CssJs$IsenseiMonorepo.unsafe("overscrollBehaviorX", "none")];

var $$static = [CssJs$IsenseiMonorepo.position("static")];

var fixed = [CssJs$IsenseiMonorepo.position("fixed")];

var absolute = [CssJs$IsenseiMonorepo.position("absolute")];

var relative = [CssJs$IsenseiMonorepo.position("relative")];

var sticky = [CssJs$IsenseiMonorepo.position("sticky")];

function inset(value) {
  if (typeof value !== "object" && !(value === "px1" || value === "3_5" || value === "2_5" || value === "1_5" || value === "0_5" || value === 96 || value === 80 || value === 72 || value === 64 || value === 60 || value === 56 || value === 52 || value === 48 || value === 44 || value === 40 || value === 36 || value === 32 || value === 28 || value === 24 || value === 20 || value === 18 || value === 16 || value === 14 || value === 12 || value === 11 || value === 10 || value === 9 || value === 8 || value === 7 || value === 6 || value === 5 || value === 4 || value === 3 || value === 2 || value === 1 || value === 0 || value === "full")) {
    if (value === "v3By12" || value === "v9By12" || value === "v11By12" || value === "v2By12" || value === "v8By12" || value === "v5By6" || value === "v4By6" || value === "v4By5" || value === "v3By6" || value === "v3By5" || value === "v3By4" || value === "v2By6" || value === "v2By5" || value === "v2By4" || value === "v2By3" || value === "v1By6" || value === "v1By5" || value === "v1By4" || value === "v1By3" || value === "v1By2" || value === "v10By12" || value === "v1By12" || value === "v7By12" || value === "v6By12" || value === "v5By12" || value === "v4By12") {
      return [
              CssJs$IsenseiMonorepo.top(Theme$IsenseiMonorepo.Proportions.toValue(value)),
              CssJs$IsenseiMonorepo.right(Theme$IsenseiMonorepo.Proportions.toValue(value)),
              CssJs$IsenseiMonorepo.bottom(Theme$IsenseiMonorepo.Proportions.toValue(value)),
              CssJs$IsenseiMonorepo.left(Theme$IsenseiMonorepo.Proportions.toValue(value))
            ];
    } else {
      return [
              CssJs$IsenseiMonorepo.top("auto"),
              CssJs$IsenseiMonorepo.right("auto"),
              CssJs$IsenseiMonorepo.bottom("auto"),
              CssJs$IsenseiMonorepo.left("auto")
            ];
    }
  }
  return [
          CssJs$IsenseiMonorepo.top(Theme$IsenseiMonorepo.Spacing.toValue(value)),
          CssJs$IsenseiMonorepo.right(Theme$IsenseiMonorepo.Spacing.toValue(value)),
          CssJs$IsenseiMonorepo.bottom(Theme$IsenseiMonorepo.Spacing.toValue(value)),
          CssJs$IsenseiMonorepo.left(Theme$IsenseiMonorepo.Spacing.toValue(value))
        ];
}

function insetX(value) {
  if (typeof value !== "object" && !(value === "px1" || value === "3_5" || value === "2_5" || value === "1_5" || value === "0_5" || value === 96 || value === 80 || value === 72 || value === 64 || value === 60 || value === 56 || value === 52 || value === 48 || value === 44 || value === 40 || value === 36 || value === 32 || value === 28 || value === 24 || value === 20 || value === 18 || value === 16 || value === 14 || value === 12 || value === 11 || value === 10 || value === 9 || value === 8 || value === 7 || value === 6 || value === 5 || value === 4 || value === 3 || value === 2 || value === 1 || value === 0 || value === "full")) {
    if (value === "v3By12" || value === "v9By12" || value === "v11By12" || value === "v2By12" || value === "v8By12" || value === "v5By6" || value === "v4By6" || value === "v4By5" || value === "v3By6" || value === "v3By5" || value === "v3By4" || value === "v2By6" || value === "v2By5" || value === "v2By4" || value === "v2By3" || value === "v1By6" || value === "v1By5" || value === "v1By4" || value === "v1By3" || value === "v1By2" || value === "v10By12" || value === "v1By12" || value === "v7By12" || value === "v6By12" || value === "v5By12" || value === "v4By12") {
      return [
              CssJs$IsenseiMonorepo.right(Theme$IsenseiMonorepo.Proportions.toValue(value)),
              CssJs$IsenseiMonorepo.left(Theme$IsenseiMonorepo.Proportions.toValue(value))
            ];
    } else {
      return [
              CssJs$IsenseiMonorepo.right("auto"),
              CssJs$IsenseiMonorepo.left("auto")
            ];
    }
  }
  return [
          CssJs$IsenseiMonorepo.right(Theme$IsenseiMonorepo.Spacing.toValue(value)),
          CssJs$IsenseiMonorepo.left(Theme$IsenseiMonorepo.Spacing.toValue(value))
        ];
}

function insetY(value) {
  if (typeof value !== "object" && !(value === "px1" || value === "3_5" || value === "2_5" || value === "1_5" || value === "0_5" || value === 96 || value === 80 || value === 72 || value === 64 || value === 60 || value === 56 || value === 52 || value === 48 || value === 44 || value === 40 || value === 36 || value === 32 || value === 28 || value === 24 || value === 20 || value === 18 || value === 16 || value === 14 || value === 12 || value === 11 || value === 10 || value === 9 || value === 8 || value === 7 || value === 6 || value === 5 || value === 4 || value === 3 || value === 2 || value === 1 || value === 0 || value === "full")) {
    if (value === "v3By12" || value === "v9By12" || value === "v11By12" || value === "v2By12" || value === "v8By12" || value === "v5By6" || value === "v4By6" || value === "v4By5" || value === "v3By6" || value === "v3By5" || value === "v3By4" || value === "v2By6" || value === "v2By5" || value === "v2By4" || value === "v2By3" || value === "v1By6" || value === "v1By5" || value === "v1By4" || value === "v1By3" || value === "v1By2" || value === "v10By12" || value === "v1By12" || value === "v7By12" || value === "v6By12" || value === "v5By12" || value === "v4By12") {
      return [
              CssJs$IsenseiMonorepo.top(Theme$IsenseiMonorepo.Proportions.toValue(value)),
              CssJs$IsenseiMonorepo.bottom(Theme$IsenseiMonorepo.Proportions.toValue(value))
            ];
    } else {
      return [
              CssJs$IsenseiMonorepo.top("auto"),
              CssJs$IsenseiMonorepo.bottom("auto")
            ];
    }
  }
  return [
          CssJs$IsenseiMonorepo.top(Theme$IsenseiMonorepo.Spacing.toValue(value)),
          CssJs$IsenseiMonorepo.bottom(Theme$IsenseiMonorepo.Spacing.toValue(value))
        ];
}

function top(value) {
  if (typeof value === "object") {
    return [CssJs$IsenseiMonorepo.top(Theme$IsenseiMonorepo.Spacing.toValue(value))];
  } else if (value === "px1" || value === "3_5" || value === "2_5" || value === "1_5" || value === "0_5" || value === 96 || value === 80 || value === 72 || value === 64 || value === 60 || value === 56 || value === 52 || value === 48 || value === 44 || value === 40 || value === 36 || value === 32 || value === 28 || value === 24 || value === 20 || value === 18 || value === 16 || value === 14 || value === 12 || value === 11 || value === 10 || value === 9 || value === 8 || value === 7 || value === 6 || value === 5 || value === 4 || value === 3 || value === 2 || value === 1 || value === 0 || value === "full") {
    return [CssJs$IsenseiMonorepo.top(Theme$IsenseiMonorepo.Spacing.toValue(value))];
  } else if (value === "v3By12" || value === "v9By12" || value === "v11By12" || value === "v2By12" || value === "v8By12" || value === "v5By6" || value === "v4By6" || value === "v4By5" || value === "v3By6" || value === "v3By5" || value === "v3By4" || value === "v2By6" || value === "v2By5" || value === "v2By4" || value === "v2By3" || value === "v1By6" || value === "v1By5" || value === "v1By4" || value === "v1By3" || value === "v1By2" || value === "v10By12" || value === "v1By12" || value === "v7By12" || value === "v6By12" || value === "v5By12" || value === "v4By12") {
    return [CssJs$IsenseiMonorepo.top(Theme$IsenseiMonorepo.Proportions.toValue(value))];
  } else {
    return [CssJs$IsenseiMonorepo.top("auto")];
  }
}

function bottom(value) {
  if (typeof value === "object") {
    return [CssJs$IsenseiMonorepo.bottom(Theme$IsenseiMonorepo.Spacing.toValue(value))];
  } else if (value === "px1" || value === "3_5" || value === "2_5" || value === "1_5" || value === "0_5" || value === 96 || value === 80 || value === 72 || value === 64 || value === 60 || value === 56 || value === 52 || value === 48 || value === 44 || value === 40 || value === 36 || value === 32 || value === 28 || value === 24 || value === 20 || value === 18 || value === 16 || value === 14 || value === 12 || value === 11 || value === 10 || value === 9 || value === 8 || value === 7 || value === 6 || value === 5 || value === 4 || value === 3 || value === 2 || value === 1 || value === 0 || value === "full") {
    return [CssJs$IsenseiMonorepo.bottom(Theme$IsenseiMonorepo.Spacing.toValue(value))];
  } else if (value === "v3By12" || value === "v9By12" || value === "v11By12" || value === "v2By12" || value === "v8By12" || value === "v5By6" || value === "v4By6" || value === "v4By5" || value === "v3By6" || value === "v3By5" || value === "v3By4" || value === "v2By6" || value === "v2By5" || value === "v2By4" || value === "v2By3" || value === "v1By6" || value === "v1By5" || value === "v1By4" || value === "v1By3" || value === "v1By2" || value === "v10By12" || value === "v1By12" || value === "v7By12" || value === "v6By12" || value === "v5By12" || value === "v4By12") {
    return [CssJs$IsenseiMonorepo.bottom(Theme$IsenseiMonorepo.Proportions.toValue(value))];
  } else {
    return [CssJs$IsenseiMonorepo.bottom("auto")];
  }
}

function left(value) {
  if (typeof value === "object") {
    return [CssJs$IsenseiMonorepo.left(Theme$IsenseiMonorepo.Spacing.toValue(value))];
  } else if (value === "px1" || value === "3_5" || value === "2_5" || value === "1_5" || value === "0_5" || value === 96 || value === 80 || value === 72 || value === 64 || value === 60 || value === 56 || value === 52 || value === 48 || value === 44 || value === 40 || value === 36 || value === 32 || value === 28 || value === 24 || value === 20 || value === 18 || value === 16 || value === 14 || value === 12 || value === 11 || value === 10 || value === 9 || value === 8 || value === 7 || value === 6 || value === 5 || value === 4 || value === 3 || value === 2 || value === 1 || value === 0 || value === "full") {
    return [CssJs$IsenseiMonorepo.left(Theme$IsenseiMonorepo.Spacing.toValue(value))];
  } else if (value === "v3By12" || value === "v9By12" || value === "v11By12" || value === "v2By12" || value === "v8By12" || value === "v5By6" || value === "v4By6" || value === "v4By5" || value === "v3By6" || value === "v3By5" || value === "v3By4" || value === "v2By6" || value === "v2By5" || value === "v2By4" || value === "v2By3" || value === "v1By6" || value === "v1By5" || value === "v1By4" || value === "v1By3" || value === "v1By2" || value === "v10By12" || value === "v1By12" || value === "v7By12" || value === "v6By12" || value === "v5By12" || value === "v4By12") {
    return [CssJs$IsenseiMonorepo.left(Theme$IsenseiMonorepo.Proportions.toValue(value))];
  } else {
    return [CssJs$IsenseiMonorepo.left("auto")];
  }
}

function right(value) {
  if (typeof value === "object") {
    return [CssJs$IsenseiMonorepo.right(Theme$IsenseiMonorepo.Spacing.toValue(value))];
  } else if (value === "px1" || value === "3_5" || value === "2_5" || value === "1_5" || value === "0_5" || value === 96 || value === 80 || value === 72 || value === 64 || value === 60 || value === 56 || value === 52 || value === 48 || value === 44 || value === 40 || value === 36 || value === 32 || value === 28 || value === 24 || value === 20 || value === 18 || value === 16 || value === 14 || value === 12 || value === 11 || value === 10 || value === 9 || value === 8 || value === 7 || value === 6 || value === 5 || value === 4 || value === 3 || value === 2 || value === 1 || value === 0 || value === "full") {
    return [CssJs$IsenseiMonorepo.right(Theme$IsenseiMonorepo.Spacing.toValue(value))];
  } else if (value === "v3By12" || value === "v9By12" || value === "v11By12" || value === "v2By12" || value === "v8By12" || value === "v5By6" || value === "v4By6" || value === "v4By5" || value === "v3By6" || value === "v3By5" || value === "v3By4" || value === "v2By6" || value === "v2By5" || value === "v2By4" || value === "v2By3" || value === "v1By6" || value === "v1By5" || value === "v1By4" || value === "v1By3" || value === "v1By2" || value === "v10By12" || value === "v1By12" || value === "v7By12" || value === "v6By12" || value === "v5By12" || value === "v4By12") {
    return [CssJs$IsenseiMonorepo.right(Theme$IsenseiMonorepo.Proportions.toValue(value))];
  } else {
    return [CssJs$IsenseiMonorepo.right("auto")];
  }
}

var visible = [CssJs$IsenseiMonorepo.visibility("visible")];

var invisible = [CssJs$IsenseiMonorepo.visibility("hidden")];

function z(index) {
  return [CssJs$IsenseiMonorepo.unsafe("zIndex", Theme$IsenseiMonorepo.ZIndex.toValue(index))];
}

function basis(scale) {
  return [CssJs$IsenseiMonorepo.flexBasis(Theme$IsenseiMonorepo.Spacing.toValue(scale))];
}

var flexRow = [CssJs$IsenseiMonorepo.flexDirection("row")];

var flexRowReverse = [CssJs$IsenseiMonorepo.flexDirection("rowReverse")];

var flexCol = [CssJs$IsenseiMonorepo.flexDirection("column")];

var flexColReverse = [CssJs$IsenseiMonorepo.flexDirection("columnReverse")];

var flexWrap = [CssJs$IsenseiMonorepo.flexWrap("wrap")];

var flexWrapReverse = [CssJs$IsenseiMonorepo.flexWrap("wrapReverse")];

var flexNowrap = [CssJs$IsenseiMonorepo.flexWrap("nowrap")];

var flex1 = [CssJs$IsenseiMonorepo.flex3(1, 1, {
        NAME: "percent",
        VAL: 0
      })];

var flexAuto = [CssJs$IsenseiMonorepo.flex3(1, 1, "auto")];

var flexInitial = [CssJs$IsenseiMonorepo.flex3(0, 1, "auto")];

var flexNone = [CssJs$IsenseiMonorepo.flex("none")];

var grow = [CssJs$IsenseiMonorepo.flexGrow(1)];

var grow0 = [CssJs$IsenseiMonorepo.flexGrow(0)];

var shrink = [CssJs$IsenseiMonorepo.flexGrow(1)];

var shrink0 = [CssJs$IsenseiMonorepo.flexGrow(0)];

function order(order$1) {
  return [CssJs$IsenseiMonorepo.order(Theme$IsenseiMonorepo.Order.toValue(order$1))];
}

function gridCols(columns) {
  return [CssJs$IsenseiMonorepo.unsafe("gridTemplateColumns", Theme$IsenseiMonorepo.GridCols.toValue(columns))];
}

function col(val) {
  return Theme$IsenseiMonorepo.Col.toValue(val);
}

function gridRows(rows) {
  return [CssJs$IsenseiMonorepo.unsafe("gridTemplateRows", Theme$IsenseiMonorepo.TemplateRows.toString(rows))];
}

function row(val) {
  return Theme$IsenseiMonorepo.Row.toValue(val);
}

var gridFlowRow = [CssJs$IsenseiMonorepo.gridAutoFlow("row")];

var gridFlowCol = [CssJs$IsenseiMonorepo.gridAutoFlow("column")];

var gridFlowRowDense = [CssJs$IsenseiMonorepo.gridAutoFlow("rowDense")];

var gridFlowColDense = [CssJs$IsenseiMonorepo.gridAutoFlow("columnDense")];

var autoColsAuto = [CssJs$IsenseiMonorepo.gridAutoColumns("auto")];

var autoColsMin = [CssJs$IsenseiMonorepo.gridAutoColumns("minContent")];

var autoColsMax = [CssJs$IsenseiMonorepo.gridAutoColumns("maxContent")];

var autoColsFr = [CssJs$IsenseiMonorepo.gridAutoColumns({
        NAME: "minmax",
        VAL: [
          "zero",
          {
            NAME: "fr",
            VAL: 1
          }
        ]
      })];

var autoRowsAuto = [CssJs$IsenseiMonorepo.gridAutoRows("auto")];

var autoRowsMin = [CssJs$IsenseiMonorepo.gridAutoRows("minContent")];

var autoRowsMax = [CssJs$IsenseiMonorepo.gridAutoRows("maxContent")];

var autoRowsFr = [CssJs$IsenseiMonorepo.gridAutoRows({
        NAME: "minmax",
        VAL: [
          "zero",
          {
            NAME: "fr",
            VAL: 1
          }
        ]
      })];

function toValue(t) {
  var variant = t.NAME;
  if (variant === "x") {
    return [CssJs$IsenseiMonorepo.columnGap(Theme$IsenseiMonorepo.Spacing.toValue(t.VAL))];
  } else if (variant === "y") {
    return [CssJs$IsenseiMonorepo.rowGap(Theme$IsenseiMonorepo.Spacing.toValue(t.VAL))];
  } else {
    return [CssJs$IsenseiMonorepo.gap(Theme$IsenseiMonorepo.Spacing.toValue(t.VAL))];
  }
}

var Gap = {
  toValue: toValue
};

var gap = toValue;

var justifyStart = [CssJs$IsenseiMonorepo.justifyContent("flexStart")];

var justifyEnd = [CssJs$IsenseiMonorepo.justifyContent("flexEnd")];

var justifyCenter = [CssJs$IsenseiMonorepo.justifyContent("center")];

var justifyBetween = [CssJs$IsenseiMonorepo.justifyContent("spaceBetween")];

var justifyAround = [CssJs$IsenseiMonorepo.justifyContent("spaceAround")];

var justifyEvenly = [CssJs$IsenseiMonorepo.justifyContent("spaceEvenly")];

var justifyItemsStart = [CssJs$IsenseiMonorepo.justifyItems("start")];

var justifyItemsEnd = [CssJs$IsenseiMonorepo.justifyItems("end_")];

var justifyItemsCenter = [CssJs$IsenseiMonorepo.justifyItems("center")];

var justifyItemsStretch = [CssJs$IsenseiMonorepo.unsafe("justifyItems", "stretch")];

var justifySelfAuto = [CssJs$IsenseiMonorepo.justifySelf("auto")];

var justifySelfStart = [CssJs$IsenseiMonorepo.justifySelf("start")];

var justifySelfEnd = [CssJs$IsenseiMonorepo.justifySelf("end_")];

var justifySelfCenter = [CssJs$IsenseiMonorepo.justifySelf("center")];

var justifySelfStretch = [CssJs$IsenseiMonorepo.justifySelf("stretch")];

var contentCenter = [CssJs$IsenseiMonorepo.alignContent("center")];

var contentStart = [CssJs$IsenseiMonorepo.alignContent("flexStart")];

var contentEnd = [CssJs$IsenseiMonorepo.alignContent("flexEnd")];

var contentBetween = [CssJs$IsenseiMonorepo.alignContent("spaceBetween")];

var contentAround = [CssJs$IsenseiMonorepo.alignContent("spaceAround")];

var contentEvenly = [CssJs$IsenseiMonorepo.alignContent("spaceEvenly")];

var itemsStart = [CssJs$IsenseiMonorepo.alignItems("flexStart")];

var itemsEnd = [CssJs$IsenseiMonorepo.alignItems("flexEnd")];

var itemsCenter = [CssJs$IsenseiMonorepo.alignItems("center")];

var itemsBaseline = [CssJs$IsenseiMonorepo.alignItems("baseline")];

var itemsStretch = [CssJs$IsenseiMonorepo.alignItems("stretch")];

var selfAuto = [CssJs$IsenseiMonorepo.alignSelf("auto")];

var selfStart = [CssJs$IsenseiMonorepo.alignSelf("flexStart")];

var selfEnd = [CssJs$IsenseiMonorepo.alignSelf("flexEnd")];

var selfCenter = [CssJs$IsenseiMonorepo.alignSelf("center")];

var selfStretch = [CssJs$IsenseiMonorepo.alignSelf("stretch")];

var selfBaseline = [CssJs$IsenseiMonorepo.alignSelf("baseline")];

var placeContentCenter = [CssJs$IsenseiMonorepo.unsafe("placeContent", "center")];

var placeContentStart = [CssJs$IsenseiMonorepo.unsafe("placeContent", "start")];

var placeContentBetween = [CssJs$IsenseiMonorepo.unsafe("placeContent", "end")];

var placeContentEnd = [CssJs$IsenseiMonorepo.unsafe("placeContent", "space-between")];

var placeContentAround = [CssJs$IsenseiMonorepo.unsafe("placeContent", "space-around")];

var placeContentEvenly = [CssJs$IsenseiMonorepo.unsafe("placeContent", "space-evenly")];

var placeContentStretch = [CssJs$IsenseiMonorepo.unsafe("placeContent", "stretch")];

var placeItemsStart = [CssJs$IsenseiMonorepo.unsafe("placeItems", "start")];

var placeItemsEnd = [CssJs$IsenseiMonorepo.unsafe("placeItems", "end")];

var placeItemsCenter = [CssJs$IsenseiMonorepo.unsafe("placeItems", "center")];

var placeItemsStretch = [CssJs$IsenseiMonorepo.unsafe("placeItems", "stretch")];

var placeSelfAuto = [CssJs$IsenseiMonorepo.unsafe("placeSelf", "auto")];

var placeSelfStart = [CssJs$IsenseiMonorepo.unsafe("placeSelf", "start")];

var placeSelfEnd = [CssJs$IsenseiMonorepo.unsafe("placeSelf", "end")];

var placeSelfCenter = [CssJs$IsenseiMonorepo.unsafe("placeSelf", "center")];

var placeSelfStretch = [CssJs$IsenseiMonorepo.unsafe("placeSelf", "stretch")];

function toValue$1(t) {
  var variant = t.NAME;
  if (variant === "l") {
    return [CssJs$IsenseiMonorepo.paddingLeft(Theme$IsenseiMonorepo.Spacing.toValue(t.VAL))];
  }
  if (variant === "r") {
    return [CssJs$IsenseiMonorepo.paddingRight(Theme$IsenseiMonorepo.Spacing.toValue(t.VAL))];
  }
  if (variant === "t") {
    return [CssJs$IsenseiMonorepo.paddingTop(Theme$IsenseiMonorepo.Spacing.toValue(t.VAL))];
  }
  if (variant === "x") {
    var size = t.VAL;
    return [
            CssJs$IsenseiMonorepo.paddingLeft(Theme$IsenseiMonorepo.Spacing.toValue(size)),
            CssJs$IsenseiMonorepo.paddingRight(Theme$IsenseiMonorepo.Spacing.toValue(size))
          ];
  }
  if (variant !== "y") {
    if (variant === "all") {
      return [CssJs$IsenseiMonorepo.padding(Theme$IsenseiMonorepo.Spacing.toValue(t.VAL))];
    } else {
      return [CssJs$IsenseiMonorepo.paddingBottom(Theme$IsenseiMonorepo.Spacing.toValue(t.VAL))];
    }
  }
  var size$1 = t.VAL;
  return [
          CssJs$IsenseiMonorepo.paddingTop(Theme$IsenseiMonorepo.Spacing.toValue(size$1)),
          CssJs$IsenseiMonorepo.paddingBottom(Theme$IsenseiMonorepo.Spacing.toValue(size$1))
        ];
}

var Padding = {
  toValue: toValue$1
};

var p = toValue$1;

function toValue$2(t) {
  var variant = t.NAME;
  if (variant === "l") {
    return [CssJs$IsenseiMonorepo.marginLeft(Theme$IsenseiMonorepo.Spacing.toValue(t.VAL))];
  }
  if (variant === "r") {
    return [CssJs$IsenseiMonorepo.marginRight(Theme$IsenseiMonorepo.Spacing.toValue(t.VAL))];
  }
  if (variant === "t") {
    return [CssJs$IsenseiMonorepo.marginTop(Theme$IsenseiMonorepo.Spacing.toValue(t.VAL))];
  }
  if (variant === "x") {
    var size = t.VAL;
    return [
            CssJs$IsenseiMonorepo.marginLeft(Theme$IsenseiMonorepo.Spacing.toValue(size)),
            CssJs$IsenseiMonorepo.marginRight(Theme$IsenseiMonorepo.Spacing.toValue(size))
          ];
  }
  if (variant !== "y") {
    if (variant === "all") {
      return [CssJs$IsenseiMonorepo.margin(Theme$IsenseiMonorepo.Spacing.toValue(t.VAL))];
    } else {
      return [CssJs$IsenseiMonorepo.marginBottom(Theme$IsenseiMonorepo.Spacing.toValue(t.VAL))];
    }
  }
  var size$1 = t.VAL;
  return [
          CssJs$IsenseiMonorepo.marginTop(Theme$IsenseiMonorepo.Spacing.toValue(size$1)),
          CssJs$IsenseiMonorepo.marginBottom(Theme$IsenseiMonorepo.Spacing.toValue(size$1))
        ];
}

var Margin = {
  toValue: toValue$2
};

var m = toValue$2;

function toValue$3(reverseOpt, t) {
  var reverse = reverseOpt !== undefined ? reverseOpt : false;
  if (t.NAME === "y") {
    var size = t.VAL;
    return [CssJs$IsenseiMonorepo.selector("& > :not([hidden]) ~ :not([hidden])", reverse ? [
                    CssJs$IsenseiMonorepo.marginTop(Theme$IsenseiMonorepo.Spacing.toValue(0)),
                    CssJs$IsenseiMonorepo.marginBottom(Theme$IsenseiMonorepo.Spacing.toValue(size))
                  ] : [
                    CssJs$IsenseiMonorepo.marginTop(Theme$IsenseiMonorepo.Spacing.toValue(size)),
                    CssJs$IsenseiMonorepo.marginBottom(Theme$IsenseiMonorepo.Spacing.toValue(0))
                  ])];
  }
  var size$1 = t.VAL;
  return [CssJs$IsenseiMonorepo.selector("& > :not([hidden]) ~ :not([hidden])", reverse ? [
                  CssJs$IsenseiMonorepo.marginLeft(Theme$IsenseiMonorepo.Spacing.toValue(0)),
                  CssJs$IsenseiMonorepo.marginRight(Theme$IsenseiMonorepo.Spacing.toValue(size$1))
                ] : [
                  CssJs$IsenseiMonorepo.marginLeft(Theme$IsenseiMonorepo.Spacing.toValue(size$1)),
                  CssJs$IsenseiMonorepo.marginRight(Theme$IsenseiMonorepo.Spacing.toValue(0))
                ])];
}

var SpaceBetween = {
  toValue: toValue$3
};

var mxAuto = [
  CssJs$IsenseiMonorepo.marginLeft("auto"),
  CssJs$IsenseiMonorepo.marginRight("auto")
];

function space(reverseOpt, axis) {
  var reverse = reverseOpt !== undefined ? reverseOpt : false;
  return toValue$3(reverse, axis);
}

function toValue$4(t) {
  if (typeof t === "object") {
    return [CssJs$IsenseiMonorepo.width(Theme$IsenseiMonorepo.Spacing.toValue(t))];
  } else if (t === "full") {
    return [CssJs$IsenseiMonorepo.width({
                  NAME: "percent",
                  VAL: 100
                })];
  } else if (t === "screen") {
    return [CssJs$IsenseiMonorepo.width({
                  NAME: "vw",
                  VAL: 100
                })];
  } else if (t === "v3By12" || t === "v9By12" || t === "v11By12" || t === "v2By12" || t === "v8By12" || t === "v5By6" || t === "v4By6" || t === "v4By5" || t === "v3By6" || t === "v3By5" || t === "v3By4" || t === "v2By6" || t === "v2By5" || t === "v2By4" || t === "v2By3" || t === "v1By6" || t === "v1By5" || t === "v1By4" || t === "v1By3" || t === "v1By2" || t === "v10By12" || t === "v1By12" || t === "v7By12" || t === "v6By12" || t === "v5By12" || t === "v4By12") {
    return [CssJs$IsenseiMonorepo.width(Theme$IsenseiMonorepo.Proportions.toValue(t))];
  } else if (t === "px1" || t === "3_5" || t === "2_5" || t === "1_5" || t === "0_5" || t === 96 || t === 80 || t === 72 || t === 64 || t === 60 || t === 56 || t === 52 || t === 48 || t === 44 || t === 40 || t === 36 || t === 32 || t === 28 || t === 24 || t === 20 || t === 18 || t === 16 || t === 14 || t === 12 || t === 11 || t === 10 || t === 9 || t === 8 || t === 7 || t === 6 || t === 5 || t === 4 || t === 3 || t === 2 || t === 1 || t === 0) {
    return [CssJs$IsenseiMonorepo.width(Theme$IsenseiMonorepo.Spacing.toValue(t))];
  } else if (t === "fit") {
    return [CssJs$IsenseiMonorepo.unsafe("width", "fit-content")];
  } else if (t === "max") {
    return [CssJs$IsenseiMonorepo.unsafe("width", "max-content")];
  } else if (t === "min") {
    return [CssJs$IsenseiMonorepo.unsafe("width", "min-content")];
  } else {
    return [CssJs$IsenseiMonorepo.width("auto")];
  }
}

var Width = {
  toValue: toValue$4
};

var w = toValue$4;

var minW0 = [CssJs$IsenseiMonorepo.minWidth({
        NAME: "px",
        VAL: 0
      })];

var minWFull = [CssJs$IsenseiMonorepo.minWidth({
        NAME: "percent",
        VAL: 100
      })];

var minWMin = [CssJs$IsenseiMonorepo.unsafe("minWidth", "min-content")];

var minWMax = [CssJs$IsenseiMonorepo.unsafe("minWidth", "max-content")];

var minWFit = [CssJs$IsenseiMonorepo.unsafe("minWidth", "fit-content")];

function maxW(max) {
  if (max === "minContent") {
    return [CssJs$IsenseiMonorepo.unsafe("maxWidth", "min-content")];
  } else if (max === "maxContent") {
    return [CssJs$IsenseiMonorepo.unsafe("maxWidth", "max-content")];
  } else if (max === "screenXl2") {
    return [CssJs$IsenseiMonorepo.maxWidth(Theme$IsenseiMonorepo.Screens.toValue(max))];
  } else {
    return [CssJs$IsenseiMonorepo.maxWidth(Theme$IsenseiMonorepo.MaxWidth.toValue(max))];
  }
}

function maxWPx(px) {
  return [CssJs$IsenseiMonorepo.maxWidth({
                NAME: "px",
                VAL: px
              })];
}

function toValue$5(t) {
  if (typeof t === "object") {
    return [CssJs$IsenseiMonorepo.height(Theme$IsenseiMonorepo.Spacing.toValue(t))];
  } else if (t === "full") {
    return [CssJs$IsenseiMonorepo.height({
                  NAME: "percent",
                  VAL: 100
                })];
  } else if (t === "screen") {
    return [CssJs$IsenseiMonorepo.height({
                  NAME: "vw",
                  VAL: 100
                })];
  } else if (t === "v3By12" || t === "v9By12" || t === "v11By12" || t === "v2By12" || t === "v8By12" || t === "v5By6" || t === "v4By6" || t === "v4By5" || t === "v3By6" || t === "v3By5" || t === "v3By4" || t === "v2By6" || t === "v2By5" || t === "v2By4" || t === "v2By3" || t === "v1By6" || t === "v1By5" || t === "v1By4" || t === "v1By3" || t === "v1By2" || t === "v10By12" || t === "v1By12" || t === "v7By12" || t === "v6By12" || t === "v5By12" || t === "v4By12") {
    return [CssJs$IsenseiMonorepo.height(Theme$IsenseiMonorepo.Proportions.toValue(t))];
  } else if (t === "px1" || t === "3_5" || t === "2_5" || t === "1_5" || t === "0_5" || t === 96 || t === 80 || t === 72 || t === 64 || t === 60 || t === 56 || t === 52 || t === 48 || t === 44 || t === 40 || t === 36 || t === 32 || t === 28 || t === 24 || t === 20 || t === 18 || t === 16 || t === 14 || t === 12 || t === 11 || t === 10 || t === 9 || t === 8 || t === 7 || t === 6 || t === 5 || t === 4 || t === 3 || t === 2 || t === 1 || t === 0) {
    return [CssJs$IsenseiMonorepo.height(Theme$IsenseiMonorepo.Spacing.toValue(t))];
  } else if (t === "fit") {
    return [CssJs$IsenseiMonorepo.unsafe("height", "fit-content")];
  } else if (t === "max") {
    return [CssJs$IsenseiMonorepo.unsafe("height", "max-content")];
  } else if (t === "min") {
    return [CssJs$IsenseiMonorepo.unsafe("height", "min-content")];
  } else {
    return [CssJs$IsenseiMonorepo.height("auto")];
  }
}

var Height = {
  toValue: toValue$5
};

var h = toValue$5;

var minH0 = [CssJs$IsenseiMonorepo.minHeight({
        NAME: "px",
        VAL: 0
      })];

var minHFull = [CssJs$IsenseiMonorepo.minHeight({
        NAME: "percent",
        VAL: 100
      })];

var minHScreen = [CssJs$IsenseiMonorepo.minHeight({
        NAME: "vh",
        VAL: 100
      })];

var minHMin = [CssJs$IsenseiMonorepo.unsafe("minHeight", "min-content")];

var minHMax = [CssJs$IsenseiMonorepo.unsafe("minHeight", "max-content")];

var minHFit = [CssJs$IsenseiMonorepo.unsafe("minHeight", "fit-content")];

function toValue$6(t) {
  if (typeof t === "object") {
    return [CssJs$IsenseiMonorepo.maxHeight(Theme$IsenseiMonorepo.Spacing.toValue(t))];
  } else if (t === "screen") {
    return [CssJs$IsenseiMonorepo.maxHeight({
                  NAME: "vw",
                  VAL: 100
                })];
  } else if (t === "px1" || t === "3_5" || t === "2_5" || t === "1_5" || t === "0_5" || t === 96 || t === 80 || t === 72 || t === 64 || t === 60 || t === 56 || t === 52 || t === 48 || t === 44 || t === 40 || t === 36 || t === 32 || t === 28 || t === 24 || t === 20 || t === 18 || t === 16 || t === 14 || t === 12 || t === 11 || t === 10 || t === 9 || t === 8 || t === 7 || t === 6 || t === 5 || t === 4 || t === 3 || t === 2 || t === 1 || t === 0) {
    return [CssJs$IsenseiMonorepo.maxHeight(Theme$IsenseiMonorepo.Spacing.toValue(t))];
  } else if (t === "fit") {
    return [CssJs$IsenseiMonorepo.unsafe("maxHeight", "fit-content")];
  } else if (t === "max") {
    return [CssJs$IsenseiMonorepo.unsafe("maxHeight", "max-content")];
  } else if (t === "min") {
    return [CssJs$IsenseiMonorepo.unsafe("maxHeight", "min-content")];
  } else {
    return [CssJs$IsenseiMonorepo.maxHeight({
                  NAME: "percent",
                  VAL: 100
                })];
  }
}

var MaxHeight = {
  toValue: toValue$6
};

var maxH = toValue$6;

var fontSans = [[CssJs$IsenseiMonorepo.fontFamilies([
          {
            NAME: "custom",
            VAL: "ui-sans-serif"
          },
          {
            NAME: "custom",
            VAL: "system-ui"
          },
          {
            NAME: "custom",
            VAL: "-apple-system"
          },
          {
            NAME: "custom",
            VAL: "BlinkMacSystemFont"
          },
          {
            NAME: "custom",
            VAL: "Segoe UI"
          },
          {
            NAME: "custom",
            VAL: "Roboto"
          },
          {
            NAME: "custom",
            VAL: "Helvetica Neue"
          },
          {
            NAME: "custom",
            VAL: "Arial"
          },
          {
            NAME: "custom",
            VAL: "Noto Sans"
          },
          "sansSerif",
          {
            NAME: "custom",
            VAL: "Apple Color Emoji"
          },
          {
            NAME: "custom",
            VAL: "Segoe UI Emoji"
          },
          {
            NAME: "custom",
            VAL: "Segoe UI Symbol"
          },
          {
            NAME: "custom",
            VAL: "Noto Color Emoji"
          }
        ])]];

var fontSerif = [[CssJs$IsenseiMonorepo.fontFamilies([
          {
            NAME: "custom",
            VAL: "ui-serif"
          },
          {
            NAME: "custom",
            VAL: "Georgia"
          },
          {
            NAME: "custom",
            VAL: "Cambria"
          },
          {
            NAME: "custom",
            VAL: "Times New Roman"
          },
          {
            NAME: "custom",
            VAL: "Times"
          },
          "serif"
        ])]];

var fontMono = [[CssJs$IsenseiMonorepo.fontFamilies([
          {
            NAME: "custom",
            VAL: "ui-monospace"
          },
          {
            NAME: "custom",
            VAL: "SFMono-Regular"
          },
          {
            NAME: "custom",
            VAL: "Menlo"
          },
          {
            NAME: "custom",
            VAL: "Monaco"
          },
          {
            NAME: "custom",
            VAL: "Consolas"
          },
          {
            NAME: "custom",
            VAL: "Liberation Mono"
          },
          {
            NAME: "custom",
            VAL: "Courier New"
          },
          "monospace"
        ])]];

function toValue$7(t) {
  if (t === "xl" || t === "lg") {
    return [
            CssJs$IsenseiMonorepo.fontSize(Theme$IsenseiMonorepo.FontSize.toValue(t)),
            CssJs$IsenseiMonorepo.lineHeight(Theme$IsenseiMonorepo.LineHeight.toValue(7))
          ];
  } else if (t === "xs" || t === "sm") {
    return [
            CssJs$IsenseiMonorepo.fontSize(Theme$IsenseiMonorepo.FontSize.toValue(t)),
            CssJs$IsenseiMonorepo.lineHeight(Theme$IsenseiMonorepo.LineHeight.toValue(5))
          ];
  } else if (t === "xl2") {
    return [
            CssJs$IsenseiMonorepo.fontSize(Theme$IsenseiMonorepo.FontSize.toValue(t)),
            CssJs$IsenseiMonorepo.lineHeight(Theme$IsenseiMonorepo.LineHeight.toValue(8))
          ];
  } else if (t === "xl3") {
    return [
            CssJs$IsenseiMonorepo.fontSize(Theme$IsenseiMonorepo.FontSize.toValue(t)),
            CssJs$IsenseiMonorepo.lineHeight(Theme$IsenseiMonorepo.LineHeight.toValue(9))
          ];
  } else if (t === "xl4") {
    return [
            CssJs$IsenseiMonorepo.fontSize(Theme$IsenseiMonorepo.FontSize.toValue(t)),
            CssJs$IsenseiMonorepo.lineHeight(Theme$IsenseiMonorepo.LineHeight.toValue(10))
          ];
  } else if (t === "xl9" || t === "xl8" || t === "xl7" || t === "xl6" || t === "xl5") {
    return [
            CssJs$IsenseiMonorepo.fontSize(Theme$IsenseiMonorepo.FontSize.toValue(t)),
            CssJs$IsenseiMonorepo.lineHeight(Theme$IsenseiMonorepo.LineHeight.toValue("none"))
          ];
  } else {
    return [
            CssJs$IsenseiMonorepo.fontSize(Theme$IsenseiMonorepo.FontSize.toValue(t)),
            CssJs$IsenseiMonorepo.lineHeight(Theme$IsenseiMonorepo.LineHeight.toValue(6))
          ];
  }
}

var TextSize = {
  toValue: toValue$7
};

var textSize = toValue$7;

var antialiased = [
  CssJs$IsenseiMonorepo.unsafe("WebkitFontSmoothing", "antialiased"),
  CssJs$IsenseiMonorepo.unsafe("MozOSXFontSmoothing", "grayscale")
];

var subpixelAntialiased = [
  CssJs$IsenseiMonorepo.unsafe("WebkitFontSmoothing", "auto"),
  CssJs$IsenseiMonorepo.unsafe("MozOSXFontSmoothing", "auto")
];

var italic = [CssJs$IsenseiMonorepo.fontStyle("italic")];

var notItalic = [CssJs$IsenseiMonorepo.fontStyle("normal")];

function fontWeight(weight) {
  return [CssJs$IsenseiMonorepo.fontWeight(Theme$IsenseiMonorepo.FontWeight.toValue(weight))];
}

var normalNums = [CssJs$IsenseiMonorepo.unsafe("fontVariantNumeric", "normal")];

var ordinal = [CssJs$IsenseiMonorepo.unsafe("fontVariantNumeric", "ordinal")];

var slashedZero = [CssJs$IsenseiMonorepo.unsafe("fontVariantNumeric", "slashed-zero")];

var liningNums = [CssJs$IsenseiMonorepo.unsafe("fontVariantNumeric", "lining-nums")];

var oldstyleNums = [CssJs$IsenseiMonorepo.unsafe("fontVariantNumeric", "oldstyle-nums")];

var proportionalNums = [CssJs$IsenseiMonorepo.unsafe("fontVariantNumeric", "proportional-nums")];

var tabularNums = [CssJs$IsenseiMonorepo.unsafe("fontVariantNumeric", "tabular-nums")];

var diagonalFractions = [CssJs$IsenseiMonorepo.unsafe("fontVariantNumeric", "diagonal-fractions")];

var stackedFractions = [CssJs$IsenseiMonorepo.unsafe("fontVariantNumeric", "stacked-fractions")];

function tracking(wide) {
  return [CssJs$IsenseiMonorepo.letterSpacing(Theme$IsenseiMonorepo.LetterSpacing.toValue(wide))];
}

function leading(value) {
  return [CssJs$IsenseiMonorepo.lineHeight(Theme$IsenseiMonorepo.LineHeight.toValue(value))];
}

function leadingFloat($$float) {
  return [CssJs$IsenseiMonorepo.lineHeight({
                NAME: "abs",
                VAL: $$float
              })];
}

var listNone = [CssJs$IsenseiMonorepo.listStyleType("none")];

var listDisc = [CssJs$IsenseiMonorepo.listStyleType("disc")];

var listDecimal = [CssJs$IsenseiMonorepo.listStyleType("decimal")];

var listInside = [CssJs$IsenseiMonorepo.listStylePosition("inside")];

var listOutside = [CssJs$IsenseiMonorepo.listStylePosition("outside")];

var textLeft = [CssJs$IsenseiMonorepo.textAlign("left")];

var textCenter = [CssJs$IsenseiMonorepo.textAlign("center")];

var textRight = [CssJs$IsenseiMonorepo.textAlign("right")];

var textJustify = [CssJs$IsenseiMonorepo.textAlign("justify")];

function textColor(opacityOpt, color) {
  var opacity = opacityOpt !== undefined ? opacityOpt : 1;
  if (color === "inherit") {
    return [CssJs$IsenseiMonorepo.unsafe("color", "inherit")];
  } else {
    return [CssJs$IsenseiMonorepo.color(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, opacity, color))];
  }
}

var underline = [CssJs$IsenseiMonorepo.textDecorationLine("underline")];

var overline = [CssJs$IsenseiMonorepo.textDecorationLine("overline")];

var lineThrough = [CssJs$IsenseiMonorepo.textDecorationLine("lineThrough")];

var noUnderline = [CssJs$IsenseiMonorepo.textDecorationLine("none")];

function decorationColor(color) {
  return [CssJs$IsenseiMonorepo.textDecorationColor(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, undefined, color))];
}

var decorationSolid = [CssJs$IsenseiMonorepo.textDecorationStyle("solid")];

var decorationDouble = [CssJs$IsenseiMonorepo.textDecorationStyle("double")];

var decorationDotted = [CssJs$IsenseiMonorepo.textDecorationStyle("dotted")];

var decorationDashed = [CssJs$IsenseiMonorepo.textDecorationStyle("dashed")];

var decorationWavy = [CssJs$IsenseiMonorepo.textDecorationStyle("wavy")];

function toString$4(t) {
  if (t === 0) {
    return "0px";
  } else if (t === 1) {
    return "1px";
  } else if (t === 2) {
    return "2px";
  } else if (t === 4) {
    return "4px";
  } else if (t === 8) {
    return "8px";
  } else {
    return "auto";
  }
}

var TextDecorationOffset = {
  toString: toString$4
};

function toString$5(t) {
  if (t === 0) {
    return "0px";
  } else if (t === 1) {
    return "1px";
  } else if (t === 2) {
    return "2px";
  } else if (t === 4) {
    return "4px";
  } else if (t === 8) {
    return "8px";
  } else if (t === "fromFont") {
    return "from-font";
  } else {
    return "auto";
  }
}

var TextDecorationThickness = {
  toString: toString$5
};

function decorationThickness(thickness) {
  return [CssJs$IsenseiMonorepo.unsafe("textDecorationThickness", toString$5(thickness))];
}

function underlineOffset(offset) {
  return [CssJs$IsenseiMonorepo.unsafe("textUnderlineOffset", toString$4(offset))];
}

var uppercase = [CssJs$IsenseiMonorepo.textTransform("uppercase")];

var lowercase = [CssJs$IsenseiMonorepo.textTransform("lowercase")];

var capitalize = [CssJs$IsenseiMonorepo.textTransform("capitalize")];

var normalCase = [CssJs$IsenseiMonorepo.textTransform("none")];

var truncate = [
  CssJs$IsenseiMonorepo.overflow("hidden"),
  CssJs$IsenseiMonorepo.textOverflow("ellipsis"),
  CssJs$IsenseiMonorepo.whiteSpace("nowrap")
];

var textEllipsis = [CssJs$IsenseiMonorepo.textOverflow("ellipsis")];

var textClip = [CssJs$IsenseiMonorepo.textOverflow("clip")];

var alignBaseline = [CssJs$IsenseiMonorepo.verticalAlign("baseline")];

var alignTop = [CssJs$IsenseiMonorepo.verticalAlign("top")];

var alignMiddle = [CssJs$IsenseiMonorepo.verticalAlign("middle")];

var alignBottom = [CssJs$IsenseiMonorepo.verticalAlign("bottom")];

var alignTextTop = [CssJs$IsenseiMonorepo.unsafe("verticalAlign", "text-top")];

var alignTextBottom = [CssJs$IsenseiMonorepo.unsafe("verticalAlign", "text-bottom")];

var alignSub = [CssJs$IsenseiMonorepo.verticalAlign("sub")];

var alignSuper = [CssJs$IsenseiMonorepo.verticalAlign("super")];

var whitespaceNormal = [CssJs$IsenseiMonorepo.whiteSpace("normal")];

var whitespaceNowrap = [CssJs$IsenseiMonorepo.whiteSpace("nowrap")];

var whitespacePre = [CssJs$IsenseiMonorepo.whiteSpace("pre")];

var whitespacePreLine = [CssJs$IsenseiMonorepo.whiteSpace("preLine")];

var whitespacePreWrap = [CssJs$IsenseiMonorepo.whiteSpace("preWrap")];

var breakNormal = [
  CssJs$IsenseiMonorepo.overflowWrap("normal"),
  CssJs$IsenseiMonorepo.wordBreak("normal")
];

var breakWords = [CssJs$IsenseiMonorepo.overflowWrap("breakWord")];

var breakAll = [CssJs$IsenseiMonorepo.wordBreak("breakAll")];

var contentNone = [CssJs$IsenseiMonorepo.contentRule("none")];

function content(string) {
  return [CssJs$IsenseiMonorepo.contentRule({
                NAME: "text",
                VAL: string
              })];
}

var bgFixed = [CssJs$IsenseiMonorepo.backgroundAttachment("fixed")];

var bgLocal = [CssJs$IsenseiMonorepo.backgroundAttachment("local")];

var bgScroll = [CssJs$IsenseiMonorepo.backgroundAttachment("scroll")];

var bgClipBorder = [CssJs$IsenseiMonorepo.backgroundClip("borderBox")];

var bgClipPadding = [CssJs$IsenseiMonorepo.backgroundClip("paddingBox")];

var bgClipContent = [CssJs$IsenseiMonorepo.backgroundClip("contentBox")];

var bgClipText = [CssJs$IsenseiMonorepo.unsafe("backgroundClip", "text")];

function bg(opacityOpt, color) {
  var opacity = opacityOpt !== undefined ? opacityOpt : 1;
  return [CssJs$IsenseiMonorepo.backgroundColor(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, opacity, color))];
}

var bgOriginBorder = [CssJs$IsenseiMonorepo.backgroundOrigin("borderBox")];

var bgOriginPadding = [CssJs$IsenseiMonorepo.backgroundOrigin("paddingBox")];

var bgOriginContent = [CssJs$IsenseiMonorepo.backgroundOrigin("contentBox")];

var bgBottom = [CssJs$IsenseiMonorepo.backgroundPosition("bottom")];

var bgCenter = [CssJs$IsenseiMonorepo.backgroundPosition("center")];

var bgLeft = [CssJs$IsenseiMonorepo.backgroundPosition("left")];

var bgLeftBottom = [CssJs$IsenseiMonorepo.backgroundPositions([
        "left",
        "bottom"
      ])];

var bgLeftTop = [CssJs$IsenseiMonorepo.backgroundPositions([
        "left",
        "top"
      ])];

var bgRight = [CssJs$IsenseiMonorepo.backgroundPosition("right")];

var bgRightBottom = [CssJs$IsenseiMonorepo.backgroundPositions([
        "right",
        "bottom"
      ])];

var bgRightTop = [CssJs$IsenseiMonorepo.backgroundPositions([
        "right",
        "top"
      ])];

var bgTop = [CssJs$IsenseiMonorepo.backgroundPosition("top")];

var bgRepeat = [CssJs$IsenseiMonorepo.backgroundRepeat("repeat")];

var bgNoRepeat = [CssJs$IsenseiMonorepo.backgroundRepeat("noRepeat")];

var bgRepeatX = [CssJs$IsenseiMonorepo.backgroundRepeat("repeatX")];

var bgRepeatY = [CssJs$IsenseiMonorepo.backgroundRepeat("repeatY")];

var bgRepeatRound = [CssJs$IsenseiMonorepo.backgroundRepeat("round")];

var bgRepeatSpace = [CssJs$IsenseiMonorepo.backgroundRepeat("space")];

var bgAuto = [CssJs$IsenseiMonorepo.backgroundSize("auto")];

var bgCover = [CssJs$IsenseiMonorepo.backgroundSize("cover")];

var bgContain = [CssJs$IsenseiMonorepo.backgroundSize("contain")];

function combineGradientColors(param) {
  return ", " + Css_AtomicTypes$IsenseiMonorepo.Color.toString(param[1]) + " " + Css_AtomicTypes$IsenseiMonorepo.Length.toString(param[0]);
}

function linGradient(direction, arrayOfTuples) {
  return "linear-gradient(" + direction + Belt_Array.reduce(arrayOfTuples, "", (function (acc, param) {
                return acc + combineGradientColors([
                            param[0],
                            param[1]
                          ]);
              })) + ")";
}

var bgNone = [CssJs$IsenseiMonorepo.backgroundImage("none")];

function toT(colorList) {
  return Css_AtomicTypes$IsenseiMonorepo.Gradient.toString(CssJs$IsenseiMonorepo.linearGradient(CssJs$IsenseiMonorepo.deg(0), colorList));
}

function toTr(colorList) {
  return linGradient("to top right", colorList);
}

function toR(colorList) {
  return Css_AtomicTypes$IsenseiMonorepo.Gradient.toString(CssJs$IsenseiMonorepo.linearGradient(CssJs$IsenseiMonorepo.deg(90), colorList));
}

function toBr(colorList) {
  return linGradient("to bottom right", colorList);
}

function toB(colorList) {
  return Css_AtomicTypes$IsenseiMonorepo.Gradient.toString(CssJs$IsenseiMonorepo.linearGradient(CssJs$IsenseiMonorepo.deg(180), colorList));
}

function toBl(colorList) {
  return linGradient("to bottom left", colorList);
}

function toL(colorList) {
  return Css_AtomicTypes$IsenseiMonorepo.Gradient.toString(CssJs$IsenseiMonorepo.linearGradient(CssJs$IsenseiMonorepo.deg(270), colorList));
}

function toTl(colorList) {
  return linGradient("to top left", colorList);
}

function bgGradientToT(colorList) {
  return [CssJs$IsenseiMonorepo.unsafe("backgroundImage", toT(colorList))];
}

function bgGradientToTr(colorList) {
  return [CssJs$IsenseiMonorepo.unsafe("backgroundImage", linGradient("to top right", colorList))];
}

function bgGradientToR(colorList) {
  return [CssJs$IsenseiMonorepo.unsafe("backgroundImage", toR(colorList))];
}

function bgGradientToBr(colorList) {
  return [CssJs$IsenseiMonorepo.unsafe("backgroundImage", linGradient("to bottom right", colorList))];
}

function bgGradientToB(colorList) {
  return [CssJs$IsenseiMonorepo.unsafe("backgroundImage", toB(colorList))];
}

function bgGradientToBl(colorList) {
  return [CssJs$IsenseiMonorepo.unsafe("backgroundImage", linGradient("to bottom left", colorList))];
}

function bgGradientToL(colorList) {
  return [CssJs$IsenseiMonorepo.unsafe("backgroundImage", toL(colorList))];
}

function bgGradientToTl(colorList) {
  return [CssJs$IsenseiMonorepo.unsafe("backgroundImage", linGradient("to top left", colorList))];
}

function toValue$8(t) {
  var variant = t.NAME;
  if (variant === "l") {
    var radius = t.VAL;
    return [
            CssJs$IsenseiMonorepo.borderTopLeftRadius(Theme$IsenseiMonorepo.BorderRadius.toValue(radius)),
            CssJs$IsenseiMonorepo.borderBottomLeftRadius(Theme$IsenseiMonorepo.BorderRadius.toValue(radius))
          ];
  }
  if (variant === "r") {
    var radius$1 = t.VAL;
    return [
            CssJs$IsenseiMonorepo.borderTopRightRadius(Theme$IsenseiMonorepo.BorderRadius.toValue(radius$1)),
            CssJs$IsenseiMonorepo.borderBottomRightRadius(Theme$IsenseiMonorepo.BorderRadius.toValue(radius$1))
          ];
  }
  if (variant === "t") {
    var radius$2 = t.VAL;
    return [
            CssJs$IsenseiMonorepo.borderTopLeftRadius(Theme$IsenseiMonorepo.BorderRadius.toValue(radius$2)),
            CssJs$IsenseiMonorepo.borderTopRightRadius(Theme$IsenseiMonorepo.BorderRadius.toValue(radius$2))
          ];
  }
  if (variant === "bl") {
    return [CssJs$IsenseiMonorepo.borderBottomLeftRadius(Theme$IsenseiMonorepo.BorderRadius.toValue(t.VAL))];
  }
  if (variant === "br") {
    return [CssJs$IsenseiMonorepo.borderBottomRightRadius(Theme$IsenseiMonorepo.BorderRadius.toValue(t.VAL))];
  }
  if (variant === "tl") {
    return [CssJs$IsenseiMonorepo.borderTopLeftRadius(Theme$IsenseiMonorepo.BorderRadius.toValue(t.VAL))];
  }
  if (variant === "tr") {
    return [CssJs$IsenseiMonorepo.borderTopRightRadius(Theme$IsenseiMonorepo.BorderRadius.toValue(t.VAL))];
  }
  if (variant === "all") {
    return [CssJs$IsenseiMonorepo.borderRadius(Theme$IsenseiMonorepo.BorderRadius.toValue(t.VAL))];
  }
  var radius$3 = t.VAL;
  return [
          CssJs$IsenseiMonorepo.borderBottomRightRadius(Theme$IsenseiMonorepo.BorderRadius.toValue(radius$3)),
          CssJs$IsenseiMonorepo.borderBottomLeftRadius(Theme$IsenseiMonorepo.BorderRadius.toValue(radius$3))
        ];
}

var BorderRadius = {
  toValue: toValue$8
};

var rounded = toValue$8;

function toValue$9(t) {
  var variant = t.NAME;
  if (variant === "l") {
    return [CssJs$IsenseiMonorepo.borderLeftWidth(Theme$IsenseiMonorepo.BorderWidth.toValue(t.VAL))];
  } else if (variant === "r") {
    return [CssJs$IsenseiMonorepo.borderRightWidth(Theme$IsenseiMonorepo.BorderWidth.toValue(t.VAL))];
  } else if (variant === "t") {
    return [CssJs$IsenseiMonorepo.borderTopWidth(Theme$IsenseiMonorepo.BorderWidth.toValue(t.VAL))];
  } else if (variant === "all") {
    return [CssJs$IsenseiMonorepo.borderWidth(Theme$IsenseiMonorepo.BorderWidth.toValue(t.VAL))];
  } else {
    return [CssJs$IsenseiMonorepo.borderBottomWidth(Theme$IsenseiMonorepo.BorderWidth.toValue(t.VAL))];
  }
}

var BorderWidth = {
  toValue: toValue$9
};

var borderWidth = toValue$9;

function toValue$10(t) {
  var variant = t.NAME;
  if (variant === "l") {
    return [CssJs$IsenseiMonorepo.borderLeftColor(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, 1, t.VAL))];
  }
  if (variant === "r") {
    return [CssJs$IsenseiMonorepo.borderRightColor(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, 1, t.VAL))];
  }
  if (variant === "t") {
    return [CssJs$IsenseiMonorepo.borderTopColor(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, 1, t.VAL))];
  }
  if (variant === "x") {
    var color = t.VAL;
    return [
            CssJs$IsenseiMonorepo.borderLeftColor(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, 1, color)),
            CssJs$IsenseiMonorepo.borderRightColor(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, 1, color))
          ];
  }
  if (variant !== "y") {
    if (variant === "all") {
      return [CssJs$IsenseiMonorepo.borderColor(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, 1, t.VAL))];
    } else {
      return [CssJs$IsenseiMonorepo.borderBottomColor(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, 1, t.VAL))];
    }
  }
  var color$1 = t.VAL;
  return [
          CssJs$IsenseiMonorepo.borderTopColor(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, 1, color$1)),
          CssJs$IsenseiMonorepo.borderBottomColor(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, 1, color$1))
        ];
}

var BorderColor = {
  toValue: toValue$10
};

var borderColor = toValue$10;

var borderSolid = [CssJs$IsenseiMonorepo.borderStyle("solid")];

var borderDashed = [CssJs$IsenseiMonorepo.borderStyle("dashed")];

var borderDotted = [CssJs$IsenseiMonorepo.borderStyle("dotted")];

var borderDouble = [CssJs$IsenseiMonorepo.borderStyle("double")];

var borderHidden = [CssJs$IsenseiMonorepo.borderStyle("hidden")];

var borderNone = [CssJs$IsenseiMonorepo.borderStyle("none")];

function toValue$11(reverseOpt, t) {
  var reverse = reverseOpt !== undefined ? reverseOpt : false;
  if (t.NAME === "y") {
    var match = t.VAL;
    var color = match[1];
    var width = match[0];
    if (reverse) {
      return [
              CssJs$IsenseiMonorepo.borderColor(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, undefined, color)),
              CssJs$IsenseiMonorepo.borderTopWidth(Theme$IsenseiMonorepo.BorderWidth.toValue(0)),
              CssJs$IsenseiMonorepo.borderBottomWidth(Theme$IsenseiMonorepo.BorderWidth.toValue(width))
            ];
    } else {
      return [
              CssJs$IsenseiMonorepo.borderColor(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, undefined, color)),
              CssJs$IsenseiMonorepo.borderTopWidth(Theme$IsenseiMonorepo.BorderWidth.toValue(width)),
              CssJs$IsenseiMonorepo.borderBottomWidth(Theme$IsenseiMonorepo.BorderWidth.toValue(0))
            ];
    }
  }
  var match$1 = t.VAL;
  var color$1 = match$1[1];
  var width$1 = match$1[0];
  if (reverse) {
    return [
            CssJs$IsenseiMonorepo.borderRightWidth(Theme$IsenseiMonorepo.BorderWidth.toValue(width$1)),
            CssJs$IsenseiMonorepo.borderLeftWidth(Theme$IsenseiMonorepo.BorderWidth.toValue(0)),
            CssJs$IsenseiMonorepo.borderColor(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, undefined, color$1))
          ];
  } else {
    return [
            CssJs$IsenseiMonorepo.borderLeftWidth(Theme$IsenseiMonorepo.BorderWidth.toValue(width$1)),
            CssJs$IsenseiMonorepo.borderRightWidth(Theme$IsenseiMonorepo.BorderWidth.toValue(0)),
            CssJs$IsenseiMonorepo.borderColor(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, undefined, color$1))
          ];
  }
}

var Divide = {
  toValue: toValue$11
};

function divide(t) {
  return toValue$11(undefined, t);
}

var divideSolid = [CssJs$IsenseiMonorepo.borderStyle("solid")];

var divideDashed = [CssJs$IsenseiMonorepo.borderStyle("dashed")];

var divideDotted = [CssJs$IsenseiMonorepo.borderStyle("dotted")];

var divideDouble = [CssJs$IsenseiMonorepo.borderStyle("double")];

var divideNone = [CssJs$IsenseiMonorepo.borderStyle("none")];

function outlineWidth(width) {
  return [CssJs$IsenseiMonorepo.outlineWidth(Theme$IsenseiMonorepo.BorderWidth.toValue(width))];
}

function outlineColor(color) {
  return [CssJs$IsenseiMonorepo.outlineColor(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, undefined, color))];
}

function outlineOffset(offset) {
  return [CssJs$IsenseiMonorepo.outlineOffset(Theme$IsenseiMonorepo.BorderWidth.toValue(offset))];
}

var outlineSolid = [CssJs$IsenseiMonorepo.outlineStyle("solid")];

var outlineDashed = [CssJs$IsenseiMonorepo.outlineStyle("dashed")];

var outlineDotted = [CssJs$IsenseiMonorepo.outlineStyle("dotted")];

var outlineDouble = [CssJs$IsenseiMonorepo.outlineStyle("double")];

var outlineHidden = [CssJs$IsenseiMonorepo.outlineStyle("hidden")];

var outlineNone = [
  CssJs$IsenseiMonorepo.outline({
        NAME: "px",
        VAL: 2
      }, "solid", Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, undefined, "transparent")),
  CssJs$IsenseiMonorepo.outlineOffset({
        NAME: "px",
        VAL: 2
      })
];

function toWidth(width) {
  if (width === 1) {
    return "1";
  } else if (width === 2) {
    return "2";
  } else if (width === 3) {
    return "3";
  } else if (width === 4) {
    return "4";
  } else if (width === 8) {
    return "8";
  } else {
    return "0";
  }
}

function toRingShadow(inset, color, width, offsetWidth) {
  return (
          inset ? "inset" : ""
        ) + " 0 0 0 calc(" + toWidth(width) + "px + " + toWidth(offsetWidth) + " " + Css_AtomicTypes$IsenseiMonorepo.Color.toString(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, undefined, color));
}

function toOffsetShadow(inset, offsetWidth, offsetColor) {
  return (
          inset ? "inset" : ""
        ) + " 0 0 0 " + toWidth(offsetWidth) + " " + Css_AtomicTypes$IsenseiMonorepo.Color.toString(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, undefined, offsetColor));
}

function toValue$12(inset, color, width, offsetWidth, offsetColor, param) {
  return [CssJs$IsenseiMonorepo.unsafe("boxShadow", toOffsetShadow(inset, offsetWidth, offsetColor) + ", " + toRingShadow(inset, color, width, offsetWidth))];
}

var Ring = {
  toWidth: toWidth,
  toRingShadow: toRingShadow,
  toOffsetShadow: toOffsetShadow,
  toValue: toValue$12
};

function ringOffsetShadow(inset, offsetWidth, offsetColor, param) {
  return Css_Js_Core$IsenseiMonorepo.Shadow.box({
              NAME: "px",
              VAL: 0
            }, {
              NAME: "px",
              VAL: 0
            }, {
              NAME: "px",
              VAL: 0
            }, {
              NAME: "px",
              VAL: offsetWidth
            }, inset, offsetColor);
}

function ringShadow(inset, spread, color, param) {
  return Css_Js_Core$IsenseiMonorepo.Shadow.box({
              NAME: "px",
              VAL: 0
            }, {
              NAME: "px",
              VAL: 0
            }, {
              NAME: "px",
              VAL: 0
            }, {
              NAME: "px",
              VAL: spread
            }, inset, color);
}

var whiteShadow = Css_Js_Core$IsenseiMonorepo.Shadow.box({
      NAME: "px",
      VAL: 0
    }, {
      NAME: "px",
      VAL: 0
    }, undefined, undefined, undefined, Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, undefined, "white"));

function ring(insetOpt, offsetWidthOpt, offsetColorOpt, widthOpt, color, param) {
  var inset = insetOpt !== undefined ? insetOpt : false;
  var offsetWidth = offsetWidthOpt !== undefined ? offsetWidthOpt : 0;
  var offsetColor = offsetColorOpt !== undefined ? offsetColorOpt : Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, undefined, "white");
  var width = widthOpt !== undefined ? widthOpt : 3;
  return [CssJs$IsenseiMonorepo.boxShadows([
                ringOffsetShadow(inset, offsetWidth, offsetColor, undefined),
                ringShadow(inset, Theme$IsenseiMonorepo.RingWidth.toValue(width) + offsetWidth | 0, Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, undefined, color), undefined),
                whiteShadow
              ])];
}

function toValue$13(t) {
  if (typeof t !== "object") {
    return [CssJs$IsenseiMonorepo.unsafe("boxShadow", "0 0 #0000")];
  }
  var variant = t.NAME;
  if (variant === "md") {
    var color = t.VAL;
    return [CssJs$IsenseiMonorepo.unsafe("boxShadow", "0 4px 6px -1px " + Css_AtomicTypes$IsenseiMonorepo.Color.toString(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, 0.1, color)) + ", 0 2px 4px -2px " + Css_AtomicTypes$IsenseiMonorepo.Color.toString(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, 0.1, color)))];
  }
  if (variant === "sm") {
    return [CssJs$IsenseiMonorepo.unsafe("boxShadow", "0 1px 2px 0 " + Css_AtomicTypes$IsenseiMonorepo.Color.toString(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, 0.05, t.VAL)))];
  }
  if (variant === "xl") {
    var color$1 = t.VAL;
    return [CssJs$IsenseiMonorepo.unsafe("boxShadow", "0 20px 25px -5px " + Css_AtomicTypes$IsenseiMonorepo.Color.toString(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, 0.1, color$1)) + ", 0 8px 10px -6px " + Css_AtomicTypes$IsenseiMonorepo.Color.toString(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, 0.1, color$1)))];
  }
  if (variant === "xl2") {
    return [CssJs$IsenseiMonorepo.unsafe("boxShadow", "0 25px 50px -12px " + Css_AtomicTypes$IsenseiMonorepo.Color.toString(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, 0.25, t.VAL)))];
  }
  if (variant === "default") {
    var color$2 = t.VAL;
    return [CssJs$IsenseiMonorepo.unsafe("boxShadow", "0 1px 3px 0 " + Css_AtomicTypes$IsenseiMonorepo.Color.toString(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, 0.1, color$2)) + ", 0 1px 2px -1px " + Css_AtomicTypes$IsenseiMonorepo.Color.toString(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, 0.1, color$2)))];
  }
  if (variant === "inner") {
    return [CssJs$IsenseiMonorepo.unsafe("boxShadow", "inset 0 2px 4px 0 " + Css_AtomicTypes$IsenseiMonorepo.Color.toString(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, 0.05, t.VAL)))];
  }
  var color$3 = t.VAL;
  return [CssJs$IsenseiMonorepo.unsafe("boxShadow", "0 10px 15px -3px " + Css_AtomicTypes$IsenseiMonorepo.Color.toString(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, 0.1, color$3)) + ", 0 4px 6px -4px " + Css_AtomicTypes$IsenseiMonorepo.Color.toString(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, 0.1, color$3)))];
}

var BoxShadow = {
  toValue: toValue$13
};

var shadow = toValue$13;

function opacity(value) {
  return [CssJs$IsenseiMonorepo.opacity(Theme$IsenseiMonorepo.Opacity.toValue(value))];
}

function toString$6(t) {
  if (t === "screen") {
    return "screen";
  } else if (t === "color") {
    return "color";
  } else if (t === "hardLight") {
    return "hardLight";
  } else if (t === "exclusion") {
    return "exclusion";
  } else if (t === "saturation") {
    return "saturation";
  } else if (t === "hue") {
    return "hue";
  } else if (t === "colorDodge") {
    return "colorDodge";
  } else if (t === "softLight") {
    return "softLight";
  } else if (t === "lighten") {
    return "lighten";
  } else if (t === "multiply") {
    return "multiply";
  } else if (t === "colorBurn") {
    return "colorBurn";
  } else if (t === "darken") {
    return "darken";
  } else if (t === "luminosity") {
    return "luminosity";
  } else if (t === "overlay") {
    return "overlay";
  } else if (t === "normal") {
    return "normal";
  } else {
    return "difference";
  }
}

var MixBlendMode = {
  toString: toString$6
};

function mixBlend(mode) {
  return [CssJs$IsenseiMonorepo.unsafe("mixBlendMode", toString$6(mode))];
}

function bgBlend(mode) {
  return [CssJs$IsenseiMonorepo.unsafe("backgroundBlendMode", toString$6(mode))];
}

function toString$7(t) {
  if (t === "lg") {
    return "blur(16px)";
  } else if (t === "md") {
    return "blur(12px)";
  } else if (t === "sm") {
    return "blur(4px)";
  } else if (t === "xl") {
    return "blur(24px)";
  } else if (t === "xl2") {
    return "blur(40px)";
  } else if (t === "xl3") {
    return "blur(64px)";
  } else if (t === "default") {
    return "blur(8px)";
  } else {
    return "blur(0)";
  }
}

var Blur = {
  toString: toString$7
};

function blur(size) {
  return [CssJs$IsenseiMonorepo.unsafe("filter", toString$7(size))];
}

function toString$8(t) {
  if (t === 50) {
    return "brightness(0.5)";
  } else if (t === 75) {
    return "brightness(0.75)";
  } else if (t === 90) {
    return "brightness(0.9)";
  } else if (t === 95) {
    return "brightness(0.95)";
  } else if (t === 100) {
    return "brightness(1)";
  } else if (t === 105) {
    return "brightness(1.05)";
  } else if (t === 110) {
    return "brightness(1.1)";
  } else if (t === 125) {
    return "brightness(1.25)";
  } else if (t === 150) {
    return "brightness(1.5)";
  } else if (t === 200) {
    return "brightness(2)";
  } else {
    return "brightness(0)";
  }
}

var Brightness = {
  toString: toString$8
};

function brightness(value) {
  return [CssJs$IsenseiMonorepo.unsafe("filter", toString$8(value))];
}

function toString$9(t) {
  if (t === 50) {
    return "contrast(0.5)";
  } else if (t === 75) {
    return "contrast(0.75)";
  } else if (t === 100) {
    return "contrast(1)";
  } else if (t === 125) {
    return "contrast(1.25)";
  } else if (t === 150) {
    return "contrast(1.5)";
  } else if (t === 200) {
    return "contrast(2)";
  } else {
    return "contrast(0)";
  }
}

var Contrast = {
  toString: toString$9
};

function contrast(value) {
  return [CssJs$IsenseiMonorepo.unsafe("filter", toString$9(value))];
}

function toString$10(t) {
  if (t === "lg") {
    return "drop-shadow(0 10px 8px rgb(0 0 0 / 0.04)) drop-shadow(0 4px 3px rgb(0 0 0 / 0.1))";
  } else if (t === "md") {
    return "drop-shadow(0 4px 3px rgb(0 0 0 / 0.07)) drop-shadow(0 2px 2px rgb(0 0 0 / 0.06))";
  } else if (t === "sm") {
    return "drop-shadow(0 1px 1px rgb(0 0 0 / 0.05))";
  } else if (t === "xl") {
    return "drop-shadow(0 20px 13px rgb(0 0 0 / 0.03)) drop-shadow(0 8px 5px rgb(0 0 0 / 0.08))";
  } else if (t === "xl2") {
    return "drop-shadow(0 25px 25px rgb(0 0 0 / 0.15))";
  } else if (t === "default") {
    return "drop-shadow(0 1px 2px rgb(0 0 0 / 0.1)) drop-shadow(0 1px 1px rgb(0 0 0 / 0.06))";
  } else {
    return "drop-shadow(0 0 #0000)";
  }
}

var DropShadow = {
  toString: toString$10
};

function dropShadow(shadow) {
  return [CssJs$IsenseiMonorepo.unsafe("filter", toString$10(shadow))];
}

var grayscale0 = [CssJs$IsenseiMonorepo.unsafe("filter", "grayscale(0)")];

var grayscale = [CssJs$IsenseiMonorepo.unsafe("filter", "grayscale(100%)")];

function toString$11(t) {
  if (t === 15) {
    return "hue-rotate(15deg)";
  } else if (t === 30) {
    return "hue-rotate(30deg)";
  } else if (t === 60) {
    return "hue-rotate(60deg)";
  } else if (t === 90) {
    return "hue-rotate(90deg)";
  } else if (t === 180) {
    return "hue-rotate(180deg)";
  } else {
    return "hue-rotate(0deg)";
  }
}

var HueRotate = {
  toString: toString$11
};

function hueRotate(rotation) {
  return [CssJs$IsenseiMonorepo.unsafe("filter", toString$11(rotation))];
}

var invert0 = [CssJs$IsenseiMonorepo.unsafe("filter", "invert(0)")];

var invert = [CssJs$IsenseiMonorepo.unsafe("filter", "invert(100%)")];

function toString$12(t) {
  if (t === 50) {
    return "saturate(50)";
  } else if (t === 100) {
    return "saturate(100)";
  } else if (t === 150) {
    return "saturate(150)";
  } else if (t === 200) {
    return "saturate(200)";
  } else {
    return "saturate(0)";
  }
}

var Saturate = {
  toString: toString$12
};

function saturate(val) {
  return [CssJs$IsenseiMonorepo.unsafe("filter", toString$12(val))];
}

var sepia0 = [CssJs$IsenseiMonorepo.unsafe("filter", "sepia(0)")];

var sepia = [CssJs$IsenseiMonorepo.unsafe("filter", "sepia(100%)")];

function backdropBlur(size) {
  return [CssJs$IsenseiMonorepo.unsafe("backdropFilter", toString$7(size))];
}

function backdropBrightness(val) {
  return [CssJs$IsenseiMonorepo.unsafe("backdropFilter", toString$8(val))];
}

function backdropContrast(val) {
  return [CssJs$IsenseiMonorepo.unsafe("backdropFilter", toString$9(val))];
}

var backdropGrayscale0 = [CssJs$IsenseiMonorepo.unsafe("backdropFilter", "grayscale(0)")];

var backdropGrayscale = [CssJs$IsenseiMonorepo.unsafe("backdropFilter", "grayscale(100%)")];

function backdropHueRotate(rotation) {
  return [CssJs$IsenseiMonorepo.unsafe("backdropFilter", toString$11(rotation))];
}

var backdropInvert0 = [CssJs$IsenseiMonorepo.unsafe("backdropFilter", "invert(0)")];

var backdropInvert = [CssJs$IsenseiMonorepo.unsafe("backdropFilter", "invert(100%)")];

function backdropOpacity(opacity) {
  return [CssJs$IsenseiMonorepo.unsafe("backdropFilter", "opacity(" + String(Theme$IsenseiMonorepo.Opacity.toValue(opacity)) + ")")];
}

function backdropSaturate(val) {
  return [CssJs$IsenseiMonorepo.unsafe("backdropFilter", toString$12(val))];
}

var backdropSepia0 = [CssJs$IsenseiMonorepo.unsafe("backdropFilter", "sepia(0)")];

var backdropSepia = [CssJs$IsenseiMonorepo.unsafe("backdropFilter", "sepia(100%)")];

var borderCollapse = [CssJs$IsenseiMonorepo.borderCollapse("collapse")];

var borderSeparate = [CssJs$IsenseiMonorepo.borderCollapse("separate")];

var tableAuto = [CssJs$IsenseiMonorepo.tableLayout("auto")];

var tableFixed = [CssJs$IsenseiMonorepo.tableLayout("fixed")];

function toString$13(t) {
  if (t === "cell") {
    return "cell";
  } else if (t === "copy") {
    return "copy";
  } else if (t === "swResize") {
    return "swResize";
  } else if (t === "grab") {
    return "grab";
  } else if (t === "help") {
    return "help";
  } else if (t === "move") {
    return "move";
  } else if (t === "none") {
    return "none";
  } else if (t === "text") {
    return "text";
  } else if (t === "rowResize") {
    return "rowResize";
  } else if (t === "wait") {
    return "wait";
  } else if (t === "pointer") {
    return "pointer";
  } else if (t === "seResize") {
    return "seResize";
  } else if (t === "zoomOut") {
    return "zoomOut";
  } else if (t === "sResize") {
    return "sResize";
  } else if (t === "zoomIn") {
    return "zoomIn";
  } else if (t === "grabbing") {
    return "grabbing";
  } else if (t === "nsResize") {
    return "nsResize";
  } else if (t === "nwseResize") {
    return "nwseResize";
  } else if (t === "progress") {
    return "progress";
  } else if (t === "crosshair") {
    return "crosshair";
  } else if (t === "wResize") {
    return "wResize";
  } else if (t === "noDrop") {
    return "noDrop";
  } else if (t === "allScroll") {
    return "allScroll";
  } else if (t === "verticalText") {
    return "verticalText";
  } else if (t === "nResize") {
    return "nResize";
  } else if (t === "default") {
    return "default";
  } else if (t === "neswResize") {
    return "neswResize";
  } else if (t === "alias") {
    return "alias";
  } else if (t === "ewResize") {
    return "ewResize";
  } else if (t === "eResize") {
    return "eResize";
  } else if (t === "nwResize") {
    return "nwResize";
  } else if (t === "contextMenu") {
    return "contextMenu";
  } else if (t === "colResize") {
    return "colResize";
  } else if (t === "notAllowed") {
    return "notAllowed";
  } else if (t === "neResize") {
    return "neResize";
  } else {
    return "auto";
  }
}

var Cursor = {
  toString: toString$13
};

function cursor(val) {
  return [CssJs$IsenseiMonorepo.cursor(val)];
}

function caretColor(color) {
  return [CssJs$IsenseiMonorepo.unsafe("caretColor", Css_AtomicTypes$IsenseiMonorepo.Color.toString(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, undefined, color)))];
}

var pointerEventsNone = [CssJs$IsenseiMonorepo.pointerEvents("none")];

var pointerEventsAuto = [CssJs$IsenseiMonorepo.pointerEvents("auto")];

var resizeNone = [CssJs$IsenseiMonorepo.resize("none")];

var resizeY = [CssJs$IsenseiMonorepo.resize("vertical")];

var resizeX = [CssJs$IsenseiMonorepo.resize("horizontal")];

var resize = [CssJs$IsenseiMonorepo.resize("both")];

var scrollAuto = [CssJs$IsenseiMonorepo.scrollBehavior("auto")];

var scrollSmooth = [CssJs$IsenseiMonorepo.scrollBehavior("smooth")];

function scrollM(spacing) {
  return [CssJs$IsenseiMonorepo.unsafe("scrollMargin", Css_AtomicTypes$IsenseiMonorepo.Length.toString(Theme$IsenseiMonorepo.Spacing.toValue(spacing)))];
}

function scrollMx(spacing) {
  return [
          CssJs$IsenseiMonorepo.unsafe("scrollMarginLeft", Css_AtomicTypes$IsenseiMonorepo.Length.toString(Theme$IsenseiMonorepo.Spacing.toValue(spacing))),
          CssJs$IsenseiMonorepo.unsafe("scrollMarginRight", Css_AtomicTypes$IsenseiMonorepo.Length.toString(Theme$IsenseiMonorepo.Spacing.toValue(spacing)))
        ];
}

function scrollMy(spacing) {
  return [
          CssJs$IsenseiMonorepo.unsafe("scrollMarginTop", Css_AtomicTypes$IsenseiMonorepo.Length.toString(Theme$IsenseiMonorepo.Spacing.toValue(spacing))),
          CssJs$IsenseiMonorepo.unsafe("scrollMarginBottom", Css_AtomicTypes$IsenseiMonorepo.Length.toString(Theme$IsenseiMonorepo.Spacing.toValue(spacing)))
        ];
}

function scrollMt(spacing) {
  return [CssJs$IsenseiMonorepo.unsafe("scrollMarginTop", Css_AtomicTypes$IsenseiMonorepo.Length.toString(Theme$IsenseiMonorepo.Spacing.toValue(spacing)))];
}

function scrollMr(spacing) {
  return [CssJs$IsenseiMonorepo.unsafe("scrollMarginRight", Css_AtomicTypes$IsenseiMonorepo.Length.toString(Theme$IsenseiMonorepo.Spacing.toValue(spacing)))];
}

function scrollMb(spacing) {
  return [CssJs$IsenseiMonorepo.unsafe("scrollMarginBottom", Css_AtomicTypes$IsenseiMonorepo.Length.toString(Theme$IsenseiMonorepo.Spacing.toValue(spacing)))];
}

function scrollMl(spacing) {
  return [CssJs$IsenseiMonorepo.unsafe("scrollMarginLeft", Css_AtomicTypes$IsenseiMonorepo.Length.toString(Theme$IsenseiMonorepo.Spacing.toValue(spacing)))];
}

function scrollP(spacing) {
  return [CssJs$IsenseiMonorepo.unsafe("scrollPadding", Css_AtomicTypes$IsenseiMonorepo.Length.toString(Theme$IsenseiMonorepo.Spacing.toValue(spacing)))];
}

function scrollPx(spacing) {
  return [
          CssJs$IsenseiMonorepo.unsafe("scrollPaddingLeft", Css_AtomicTypes$IsenseiMonorepo.Length.toString(Theme$IsenseiMonorepo.Spacing.toValue(spacing))),
          CssJs$IsenseiMonorepo.unsafe("scrollPaddingRight", Css_AtomicTypes$IsenseiMonorepo.Length.toString(Theme$IsenseiMonorepo.Spacing.toValue(spacing)))
        ];
}

function scrollPy(spacing) {
  return [
          CssJs$IsenseiMonorepo.unsafe("scrollPaddingTop", Css_AtomicTypes$IsenseiMonorepo.Length.toString(Theme$IsenseiMonorepo.Spacing.toValue(spacing))),
          CssJs$IsenseiMonorepo.unsafe("scrollPaddingBottom", Css_AtomicTypes$IsenseiMonorepo.Length.toString(Theme$IsenseiMonorepo.Spacing.toValue(spacing)))
        ];
}

function scrollPt(spacing) {
  return [CssJs$IsenseiMonorepo.unsafe("scrollPaddingTop", Css_AtomicTypes$IsenseiMonorepo.Length.toString(Theme$IsenseiMonorepo.Spacing.toValue(spacing)))];
}

function scrollPr(spacing) {
  return [CssJs$IsenseiMonorepo.unsafe("scrollPaddingRight", Css_AtomicTypes$IsenseiMonorepo.Length.toString(Theme$IsenseiMonorepo.Spacing.toValue(spacing)))];
}

function scrollPb(spacing) {
  return [CssJs$IsenseiMonorepo.unsafe("scrollPaddingBottom", Css_AtomicTypes$IsenseiMonorepo.Length.toString(Theme$IsenseiMonorepo.Spacing.toValue(spacing)))];
}

function scrollPl(spacing) {
  return [CssJs$IsenseiMonorepo.unsafe("scrollPaddingLeft", Css_AtomicTypes$IsenseiMonorepo.Length.toString(Theme$IsenseiMonorepo.Spacing.toValue(spacing)))];
}

var snapStart = [CssJs$IsenseiMonorepo.unsafe("scrollSnapAlign", "start")];

var snapEnd = [CssJs$IsenseiMonorepo.unsafe("scrollSnapAlign", "end")];

var snapCenter = [CssJs$IsenseiMonorepo.unsafe("scrollSnapAlign", "center")];

var snapAlignNone = [CssJs$IsenseiMonorepo.unsafe("scrollSnapAlign", "none")];

var snapNormal = [CssJs$IsenseiMonorepo.unsafe("scrollSnapStop", "normal")];

var snapAlways = [CssJs$IsenseiMonorepo.unsafe("scrollSnapStop", "always")];

function toString$14(snapStrictness, t) {
  if (t === "none") {
    return "none";
  } else if (t === "x") {
    return "x " + snapStrictness;
  } else if (t === "y") {
    return "y " + snapStrictness;
  } else {
    return "both " + snapStrictness;
  }
}

var SnapType = {
  toString: toString$14
};

function snap(snapStrictness, snapType) {
  return [CssJs$IsenseiMonorepo.unsafe("scrollSnapType", toString$14(snapStrictness, snapType))];
}

function toString$15(t) {
  if (t === "none") {
    return "none";
  } else if (t === "panX") {
    return "panX";
  } else if (t === "panY") {
    return "panY";
  } else if (t === "pinchZoom") {
    return "pinchZoom";
  } else if (t === "panDown") {
    return "panDown";
  } else if (t === "panLeft") {
    return "panLeft";
  } else if (t === "mainpulation") {
    return "manipulation";
  } else if (t === "panUp") {
    return "panUp";
  } else if (t === "panRight") {
    return "panRight";
  } else {
    return "auto";
  }
}

var TouchAction = {
  toString: toString$15
};

function touch(action) {
  return [CssJs$IsenseiMonorepo.unsafe("touchAction", toString$15(action))];
}

var selectNone = [CssJs$IsenseiMonorepo.userSelect("none")];

var selectText = [CssJs$IsenseiMonorepo.userSelect("text")];

var selectAll = [CssJs$IsenseiMonorepo.userSelect("all")];

var selectAuto = [CssJs$IsenseiMonorepo.userSelect("auto")];

function toString$16(t) {
  if (t === "transform") {
    return "transform";
  } else if (t === "scrollPosition") {
    return "scrollPosition";
  } else if (t === "contents") {
    return "contents";
  } else {
    return "auto";
  }
}

var WillChange = {
  toString: toString$16
};

function willChange(value) {
  return [CssJs$IsenseiMonorepo.unsafe("will-change", toString$16(value))];
}

function fill(color) {
  return [CssJs$IsenseiMonorepo.unsafe("fill", Css_AtomicTypes$IsenseiMonorepo.Color.toString(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, undefined, color)))];
}

function stroke(color) {
  return [CssJs$IsenseiMonorepo.unsafe("stroke", Css_AtomicTypes$IsenseiMonorepo.Color.toString(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, undefined, color)))];
}

function toString$17(t) {
  if (t === 1) {
    return "1";
  } else if (t === 2) {
    return "2";
  } else {
    return "0";
  }
}

var StrokeWidth = {
  toString: toString$17
};

function strokeWidth(width) {
  return [CssJs$IsenseiMonorepo.unsafe("strokeWidth", toString$17(width))];
}

var srOnly = [
  CssJs$IsenseiMonorepo.position("absolute"),
  CssJs$IsenseiMonorepo.width({
        NAME: "px",
        VAL: 1
      }),
  CssJs$IsenseiMonorepo.height({
        NAME: "px",
        VAL: 1
      }),
  CssJs$IsenseiMonorepo.padding({
        NAME: "px",
        VAL: 0
      }),
  CssJs$IsenseiMonorepo.margin({
        NAME: "px",
        VAL: -1
      }),
  CssJs$IsenseiMonorepo.overflow("hidden"),
  CssJs$IsenseiMonorepo.unsafe("clip", "rect(0, 0, 0, 0)"),
  CssJs$IsenseiMonorepo.whiteSpace("nowrap"),
  CssJs$IsenseiMonorepo.borderWidth({
        NAME: "px",
        VAL: 0
      })
];

var noSrOnly = [
  CssJs$IsenseiMonorepo.position("static"),
  CssJs$IsenseiMonorepo.width("auto"),
  CssJs$IsenseiMonorepo.height("auto"),
  CssJs$IsenseiMonorepo.padding({
        NAME: "px",
        VAL: 0
      }),
  CssJs$IsenseiMonorepo.margin({
        NAME: "px",
        VAL: 0
      }),
  CssJs$IsenseiMonorepo.overflow("visible"),
  CssJs$IsenseiMonorepo.unsafe("clip", "auto"),
  CssJs$IsenseiMonorepo.whiteSpace("normal")
];

function transform(twTranslateXOpt, twTranslateYOpt, twRotateOpt, twSkewXOpt, twSkewYOpt, twScaleXOpt, twScaleYOpt, param) {
  var twTranslateX = twTranslateXOpt !== undefined ? twTranslateXOpt : 0;
  var twTranslateY = twTranslateYOpt !== undefined ? twTranslateYOpt : 0;
  var twRotate = twRotateOpt !== undefined ? twRotateOpt : ({
        NAME: "deg",
        VAL: 0
      });
  var twSkewX = twSkewXOpt !== undefined ? twSkewXOpt : ({
        NAME: "deg",
        VAL: 0
      });
  var twSkewY = twSkewYOpt !== undefined ? twSkewYOpt : ({
        NAME: "deg",
        VAL: 0
      });
  var twScaleX = twScaleXOpt !== undefined ? twScaleXOpt : 1;
  var twScaleY = twScaleYOpt !== undefined ? twScaleYOpt : 1;
  return [CssJs$IsenseiMonorepo.transforms([
                CssJs$IsenseiMonorepo.translateX({
                      NAME: "percent",
                      VAL: twTranslateX
                    }),
                CssJs$IsenseiMonorepo.translateY({
                      NAME: "percent",
                      VAL: twTranslateY
                    }),
                CssJs$IsenseiMonorepo.rotate(twRotate),
                CssJs$IsenseiMonorepo.skewX(twSkewX),
                CssJs$IsenseiMonorepo.skewY(twSkewY),
                CssJs$IsenseiMonorepo.scaleX(twScaleX),
                CssJs$IsenseiMonorepo.scaleY(twScaleY)
              ])];
}

function transformGpu(twTranslateXOpt, twTranslateYOpt, twRotateOpt, twSkewXOpt, twSkewYOpt, twScaleXOpt, twScaleYOpt, param) {
  var twTranslateX = twTranslateXOpt !== undefined ? twTranslateXOpt : ({
        NAME: "percent",
        VAL: 0
      });
  var twTranslateY = twTranslateYOpt !== undefined ? twTranslateYOpt : ({
        NAME: "percent",
        VAL: 0
      });
  var twRotate = twRotateOpt !== undefined ? twRotateOpt : ({
        NAME: "deg",
        VAL: 0
      });
  var twSkewX = twSkewXOpt !== undefined ? twSkewXOpt : ({
        NAME: "deg",
        VAL: 0
      });
  var twSkewY = twSkewYOpt !== undefined ? twSkewYOpt : ({
        NAME: "deg",
        VAL: 0
      });
  var twScaleX = twScaleXOpt !== undefined ? twScaleXOpt : 1;
  var twScaleY = twScaleYOpt !== undefined ? twScaleYOpt : 1;
  return [CssJs$IsenseiMonorepo.transforms([
                CssJs$IsenseiMonorepo.translate3d(twTranslateX, twTranslateY, {
                      NAME: "percent",
                      VAL: 0
                    }),
                CssJs$IsenseiMonorepo.rotate(twRotate),
                CssJs$IsenseiMonorepo.skewX(twSkewX),
                CssJs$IsenseiMonorepo.skewY(twSkewY),
                CssJs$IsenseiMonorepo.scaleX(twScaleX),
                CssJs$IsenseiMonorepo.scaleY(twScaleY)
              ])];
}

var transformNone = [CssJs$IsenseiMonorepo.transform("none")];

var originCenter = [CssJs$IsenseiMonorepo.unsafe("transformOrigin", "center")];

var originRight = [CssJs$IsenseiMonorepo.unsafe("transformOrigin", "right")];

var originLeft = [CssJs$IsenseiMonorepo.unsafe("transformOrigin", "left")];

var originTop = [CssJs$IsenseiMonorepo.unsafe("transformOrigin", "top")];

var originTopLeft = [CssJs$IsenseiMonorepo.unsafe("transformOrigin", "top left")];

var originTopRight = [CssJs$IsenseiMonorepo.unsafe("transformOrigin", "top right")];

var originBottom = [CssJs$IsenseiMonorepo.unsafe("transformOrigin", "bottom")];

var originBottomRight = [CssJs$IsenseiMonorepo.unsafe("transformOrigin", "bottom right")];

var originBottomLeft = [CssJs$IsenseiMonorepo.unsafe("transformOrigin", "bottom left")];

function accentColor(color) {
  return [CssJs$IsenseiMonorepo.unsafe("accentColor", Css_AtomicTypes$IsenseiMonorepo.Color.toString(Curry._2(Theme$IsenseiMonorepo.ColorPalettes.Tailwind3.toValue, undefined, color)))];
}

var appearanceNone = [CssJs$IsenseiMonorepo.unsafe("appearance", "none")];

var timingFunction = {
  NAME: "cubicBezier",
  VAL: [
    0.4,
    0,
    0.2,
    1
  ]
};

var transitionNone = [CssJs$IsenseiMonorepo.transitionProperty("none")];

var transitionAll = [CssJs$IsenseiMonorepo.transition(Theme$IsenseiMonorepo.Duration.toValue(150), undefined, timingFunction, "all")];

var transition = [CssJs$IsenseiMonorepo.transition(Theme$IsenseiMonorepo.Duration.toValue(150), undefined, timingFunction, "color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter")];

var transitionColors = [CssJs$IsenseiMonorepo.transition(Theme$IsenseiMonorepo.Duration.toValue(150), undefined, timingFunction, "color, background-color, border-color, text-decoration-color, fill, stroke")];

var transitionOpacity = [CssJs$IsenseiMonorepo.transition(Theme$IsenseiMonorepo.Duration.toValue(150), undefined, timingFunction, "opacity")];

var transitionShadow = [CssJs$IsenseiMonorepo.transition(Theme$IsenseiMonorepo.Duration.toValue(150), undefined, timingFunction, "boxShadow")];

var transitionTransform = [CssJs$IsenseiMonorepo.transition(Theme$IsenseiMonorepo.Duration.toValue(150), undefined, timingFunction, "transform")];

function duration(miliseconds) {
  return [CssJs$IsenseiMonorepo.transitionDuration(Theme$IsenseiMonorepo.Duration.toValue(miliseconds))];
}

var easeLinear = [CssJs$IsenseiMonorepo.transitionTimingFunction(Theme$IsenseiMonorepo.TimingFunction.toValue("linear"))];

var easeIn = [CssJs$IsenseiMonorepo.transitionTimingFunction({
        NAME: "cubicBezier",
        VAL: [
          0.4,
          0,
          1,
          1
        ]
      })];

var easeOut = [CssJs$IsenseiMonorepo.transitionTimingFunction({
        NAME: "cubicBezier",
        VAL: [
          0,
          0,
          0.2,
          1
        ]
      })];

var easeInOut = [CssJs$IsenseiMonorepo.transitionTimingFunction({
        NAME: "cubicBezier",
        VAL: [
          0.4,
          0,
          0.2,
          1
        ]
      })];

function delay(miliseconds) {
  return [CssJs$IsenseiMonorepo.transitionDelay(Theme$IsenseiMonorepo.Duration.toValue(miliseconds))];
}

var animateNone = [CssJs$IsenseiMonorepo.animationValue({
        NAME: "value",
        VAL: "none"
      })];

var animateSpin = [CssJs$IsenseiMonorepo.animation(1000, 0, undefined, "linear", undefined, undefined, "infinite", Theme$IsenseiMonorepo.KeyFrames.spin)];

var animatePing = [CssJs$IsenseiMonorepo.animation(1000, 0, undefined, {
        NAME: "cubicBezier",
        VAL: [
          0,
          0,
          0.2,
          1
        ]
      }, undefined, undefined, "infinite", Theme$IsenseiMonorepo.KeyFrames.ping)];

var animatePulse = [CssJs$IsenseiMonorepo.animation(2000, 0, undefined, {
        NAME: "cubicBezier",
        VAL: [
          0.4,
          0,
          0.6,
          1
        ]
      }, undefined, undefined, "infinite", Theme$IsenseiMonorepo.KeyFrames.pulse)];

var animateBounce = [CssJs$IsenseiMonorepo.animation(1000, 0, undefined, undefined, undefined, undefined, "infinite", Theme$IsenseiMonorepo.KeyFrames.bounce)];

function scale(val) {
  return [CssJs$IsenseiMonorepo.transform({
                NAME: "scale",
                VAL: [
                  Theme$IsenseiMonorepo.Scale.toValue(val),
                  Theme$IsenseiMonorepo.Scale.toValue(val)
                ]
              })];
}

function scaleX(val) {
  return [CssJs$IsenseiMonorepo.transform({
                NAME: "scaleX",
                VAL: Theme$IsenseiMonorepo.Scale.toValue(val)
              })];
}

function scaleY(val) {
  return [CssJs$IsenseiMonorepo.transform({
                NAME: "scaleY",
                VAL: Theme$IsenseiMonorepo.Scale.toValue(val)
              })];
}

function rotate(val) {
  return [CssJs$IsenseiMonorepo.transform({
                NAME: "rotate",
                VAL: Theme$IsenseiMonorepo.Rotate.toValue(val)
              })];
}

function translateX(val) {
  return [CssJs$IsenseiMonorepo.transform({
                NAME: "translateX",
                VAL: Theme$IsenseiMonorepo.Spacing.toValue(val)
              })];
}

function translateY(val) {
  return [CssJs$IsenseiMonorepo.transform({
                NAME: "translateY",
                VAL: Theme$IsenseiMonorepo.Spacing.toValue(val)
              })];
}

function skewX(val) {
  return [CssJs$IsenseiMonorepo.skewX(Theme$IsenseiMonorepo.Skew.toValue(val))];
}

function skewY(val) {
  return [CssJs$IsenseiMonorepo.skewY(Theme$IsenseiMonorepo.Skew.toValue(val))];
}

function round($$float) {
  return Caml_format.caml_float_of_string($$float.toFixed(7));
}

function em(px, base) {
  return {
          NAME: "em",
          VAL: Caml_format.caml_float_of_string((px / base).toFixed(7))
        };
}

function toRem(px) {
  return {
          NAME: "rem",
          VAL: px / 16
        };
}

function leading$1(px, base) {
  return [CssJs$IsenseiMonorepo.lineHeight({
                NAME: "abs",
                VAL: Caml_format.caml_float_of_string((px / base).toFixed(7))
              })];
}

function w$1(px, base) {
  return [CssJs$IsenseiMonorepo.width(em(px, base))];
}

function h$1(px, base) {
  return [CssJs$IsenseiMonorepo.height(em(px, base))];
}

function square(px, base) {
  return [
          CssJs$IsenseiMonorepo.width(em(px, base)),
          CssJs$IsenseiMonorepo.height(em(px, base))
        ];
}

function rect(w, h, base) {
  return [
          CssJs$IsenseiMonorepo.width(em(w, base)),
          CssJs$IsenseiMonorepo.height(em(h, base))
        ];
}

function top$1(px, base) {
  return [CssJs$IsenseiMonorepo.top(em(px, base))];
}

function right$1(px, base) {
  return [CssJs$IsenseiMonorepo.right(em(px, base))];
}

function bottom$1(px, base) {
  return [CssJs$IsenseiMonorepo.bottom(em(px, base))];
}

function left$1(px, base) {
  return [CssJs$IsenseiMonorepo.left(em(px, base))];
}

function topCalc(mathOperation, base) {
  if (mathOperation.NAME === "sub") {
    var match = mathOperation.VAL;
    return [CssJs$IsenseiMonorepo.top({
                  NAME: "em",
                  VAL: Caml_format.caml_float_of_string((match[0] / base).toFixed(7)) - Caml_format.caml_float_of_string((match[1] / base).toFixed(7))
                })];
  }
  var match$1 = mathOperation.VAL;
  return [CssJs$IsenseiMonorepo.top({
                NAME: "em",
                VAL: Caml_format.caml_float_of_string((match$1[0] / base).toFixed(7)) + Caml_format.caml_float_of_string((match$1[1] / base).toFixed(7))
              })];
}

function rightCalc(mathOperation, base) {
  if (mathOperation.NAME === "sub") {
    var match = mathOperation.VAL;
    return [CssJs$IsenseiMonorepo.right({
                  NAME: "em",
                  VAL: Caml_format.caml_float_of_string((match[0] / base).toFixed(7)) - Caml_format.caml_float_of_string((match[1] / base).toFixed(7))
                })];
  }
  var match$1 = mathOperation.VAL;
  return [CssJs$IsenseiMonorepo.right({
                NAME: "em",
                VAL: Caml_format.caml_float_of_string((match$1[0] / base).toFixed(7)) + Caml_format.caml_float_of_string((match$1[1] / base).toFixed(7))
              })];
}

function bottomCalc(mathOperation, base) {
  if (mathOperation.NAME === "sub") {
    var match = mathOperation.VAL;
    return [CssJs$IsenseiMonorepo.bottom({
                  NAME: "em",
                  VAL: Caml_format.caml_float_of_string((match[0] / base).toFixed(7)) - Caml_format.caml_float_of_string((match[1] / base).toFixed(7))
                })];
  }
  var match$1 = mathOperation.VAL;
  return [CssJs$IsenseiMonorepo.bottom({
                NAME: "em",
                VAL: Caml_format.caml_float_of_string((match$1[0] / base).toFixed(7)) + Caml_format.caml_float_of_string((match$1[1] / base).toFixed(7))
              })];
}

function leftCalc(mathOperation, base) {
  if (mathOperation.NAME === "sub") {
    var match = mathOperation.VAL;
    return [CssJs$IsenseiMonorepo.left({
                  NAME: "em",
                  VAL: Caml_format.caml_float_of_string((match[0] / base).toFixed(7)) - Caml_format.caml_float_of_string((match[1] / base).toFixed(7))
                })];
  }
  var match$1 = mathOperation.VAL;
  return [CssJs$IsenseiMonorepo.left({
                NAME: "em",
                VAL: Caml_format.caml_float_of_string((match$1[0] / base).toFixed(7)) + Caml_format.caml_float_of_string((match$1[1] / base).toFixed(7))
              })];
}

function maxW$1(characters) {
  return [CssJs$IsenseiMonorepo.maxWidth({
                NAME: "ch",
                VAL: characters
              })];
}

function fontSize(px) {
  return [CssJs$IsenseiMonorepo.fontSize(toRem(px))];
}

var Typography = {
  round: round,
  em: em,
  toRem: toRem,
  leading: leading$1,
  w: w$1,
  h: h$1,
  square: square,
  rect: rect,
  top: top$1,
  right: right$1,
  bottom: bottom$1,
  left: left$1,
  topCalc: topCalc,
  rightCalc: rightCalc,
  bottomCalc: bottomCalc,
  leftCalc: leftCalc,
  maxW: maxW$1,
  fontSize: fontSize
};

var merge = CssJs$IsenseiMonorepo.merge;

var style = CssJs$IsenseiMonorepo.style;

var BreakBefore;

export {
  emptyRule ,
  merge ,
  style ,
  tw ,
  twStyle ,
  minWBreakpoint ,
  maxWBreakpoint ,
  darkMedia ,
  portrait ,
  landscape ,
  motionSafe ,
  motionReduce ,
  print ,
  rtl ,
  ltr ,
  sm ,
  md ,
  lg ,
  xl ,
  xl2 ,
  fontFamilies ,
  fontName ,
  selector ,
  dividers ,
  dark ,
  active ,
  checked ,
  $$default ,
  $$default as default,
  defined ,
  disabled ,
  empty ,
  enabled ,
  first ,
  firstOfType ,
  focus ,
  focusWithin ,
  focusVisible ,
  odd ,
  even ,
  placeholderShown ,
  autofill ,
  _open ,
  hover ,
  indeterminate ,
  inRange ,
  invalid ,
  last ,
  lastOfType ,
  link ,
  only ,
  onlyOfType ,
  optional ,
  outOfRange ,
  readOnly ,
  readWrite ,
  required ,
  root ,
  scope ,
  target ,
  valid ,
  visited ,
  after ,
  before ,
  firstLetter ,
  firstLine ,
  selection ,
  marker ,
  file ,
  placeholder ,
  aspectAuto ,
  aspectSquare ,
  aspectVideo ,
  aspectCustom ,
  container ,
  containerSm ,
  containerMd ,
  containerLg ,
  containerXl ,
  container2Xl ,
  Columns ,
  columns ,
  BreakAfter ,
  BreakBefore ,
  BreakInside ,
  breakAfter ,
  breakBefore ,
  breakInside ,
  BoxDecoration ,
  boxDecoration ,
  boxBorder ,
  boxContent ,
  block ,
  inlineBlock ,
  inline ,
  flex ,
  inlineFlex ,
  table ,
  inlineTable ,
  tableCaption ,
  tableCell ,
  tableColumn ,
  tableColumnGroup ,
  tableFooterGroup ,
  tableHeaderGroup ,
  tableRowGroup ,
  tableRow ,
  flowRoot ,
  grid ,
  inlineGrid ,
  contents ,
  listItem ,
  hidden ,
  floatRight ,
  floatLeft ,
  floatNone ,
  clearLeft ,
  clearRight ,
  clearBoth ,
  clearNone ,
  isolate ,
  isolateAuto ,
  objectContain ,
  objectCover ,
  objectFill ,
  objectNone ,
  objectScaleDown ,
  objectBottom ,
  objectCenter ,
  objectLeft ,
  objectLeftBottom ,
  objectLeftTop ,
  objectRight ,
  objectRightBottom ,
  objectRightTop ,
  objectTop ,
  overflowAuto ,
  overflowHidden ,
  overflowClip ,
  overflowVisible ,
  overflowScroll ,
  overflowXAuto ,
  overflowYAuto ,
  overflowXHidden ,
  overflowYHidden ,
  overflowXClip ,
  overflowYClip ,
  overflowXVisible ,
  overflowYVisible ,
  overflowXScroll ,
  overflowYScroll ,
  overscrollAuto ,
  overscrollContain ,
  overscrollNone ,
  overscrollYAuto ,
  overscrollYContain ,
  overscrollYNone ,
  overscrollXAuto ,
  overscrollXContain ,
  overscrollXNone ,
  $$static ,
  fixed ,
  absolute ,
  relative ,
  sticky ,
  inset ,
  insetX ,
  insetY ,
  top ,
  bottom ,
  left ,
  right ,
  visible ,
  invisible ,
  z ,
  basis ,
  flexRow ,
  flexRowReverse ,
  flexCol ,
  flexColReverse ,
  flexWrap ,
  flexWrapReverse ,
  flexNowrap ,
  flex1 ,
  flexAuto ,
  flexInitial ,
  flexNone ,
  grow ,
  grow0 ,
  shrink ,
  shrink0 ,
  order ,
  gridCols ,
  col ,
  gridRows ,
  row ,
  gridFlowRow ,
  gridFlowCol ,
  gridFlowRowDense ,
  gridFlowColDense ,
  autoColsAuto ,
  autoColsMin ,
  autoColsMax ,
  autoColsFr ,
  autoRowsAuto ,
  autoRowsMin ,
  autoRowsMax ,
  autoRowsFr ,
  Gap ,
  gap ,
  justifyStart ,
  justifyEnd ,
  justifyCenter ,
  justifyBetween ,
  justifyAround ,
  justifyEvenly ,
  justifyItemsStart ,
  justifyItemsEnd ,
  justifyItemsCenter ,
  justifyItemsStretch ,
  justifySelfAuto ,
  justifySelfStart ,
  justifySelfEnd ,
  justifySelfCenter ,
  justifySelfStretch ,
  contentCenter ,
  contentStart ,
  contentEnd ,
  contentBetween ,
  contentAround ,
  contentEvenly ,
  itemsStart ,
  itemsEnd ,
  itemsCenter ,
  itemsBaseline ,
  itemsStretch ,
  selfAuto ,
  selfStart ,
  selfEnd ,
  selfCenter ,
  selfStretch ,
  selfBaseline ,
  placeContentCenter ,
  placeContentStart ,
  placeContentBetween ,
  placeContentEnd ,
  placeContentAround ,
  placeContentEvenly ,
  placeContentStretch ,
  placeItemsStart ,
  placeItemsEnd ,
  placeItemsCenter ,
  placeItemsStretch ,
  placeSelfAuto ,
  placeSelfStart ,
  placeSelfEnd ,
  placeSelfCenter ,
  placeSelfStretch ,
  Padding ,
  p ,
  Margin ,
  m ,
  SpaceBetween ,
  mxAuto ,
  space ,
  Width ,
  w ,
  minW0 ,
  minWFull ,
  minWMin ,
  minWMax ,
  minWFit ,
  maxW ,
  maxWPx ,
  Height ,
  h ,
  minH0 ,
  minHFull ,
  minHScreen ,
  minHMin ,
  minHMax ,
  minHFit ,
  MaxHeight ,
  maxH ,
  fontSans ,
  fontSerif ,
  fontMono ,
  TextSize ,
  textSize ,
  antialiased ,
  subpixelAntialiased ,
  italic ,
  notItalic ,
  fontWeight ,
  normalNums ,
  ordinal ,
  slashedZero ,
  liningNums ,
  oldstyleNums ,
  proportionalNums ,
  tabularNums ,
  diagonalFractions ,
  stackedFractions ,
  tracking ,
  leading ,
  leadingFloat ,
  listNone ,
  listDisc ,
  listDecimal ,
  listInside ,
  listOutside ,
  textLeft ,
  textCenter ,
  textRight ,
  textJustify ,
  textColor ,
  underline ,
  overline ,
  lineThrough ,
  noUnderline ,
  decorationColor ,
  decorationSolid ,
  decorationDouble ,
  decorationDotted ,
  decorationDashed ,
  decorationWavy ,
  TextDecorationOffset ,
  TextDecorationThickness ,
  decorationThickness ,
  underlineOffset ,
  uppercase ,
  lowercase ,
  capitalize ,
  normalCase ,
  truncate ,
  textEllipsis ,
  textClip ,
  alignBaseline ,
  alignTop ,
  alignMiddle ,
  alignBottom ,
  alignTextTop ,
  alignTextBottom ,
  alignSub ,
  alignSuper ,
  whitespaceNormal ,
  whitespaceNowrap ,
  whitespacePre ,
  whitespacePreLine ,
  whitespacePreWrap ,
  breakNormal ,
  breakWords ,
  breakAll ,
  contentNone ,
  content ,
  bgFixed ,
  bgLocal ,
  bgScroll ,
  bgClipBorder ,
  bgClipPadding ,
  bgClipContent ,
  bgClipText ,
  bg ,
  bgOriginBorder ,
  bgOriginPadding ,
  bgOriginContent ,
  bgBottom ,
  bgCenter ,
  bgLeft ,
  bgLeftBottom ,
  bgLeftTop ,
  bgRight ,
  bgRightBottom ,
  bgRightTop ,
  bgTop ,
  bgRepeat ,
  bgNoRepeat ,
  bgRepeatX ,
  bgRepeatY ,
  bgRepeatRound ,
  bgRepeatSpace ,
  bgAuto ,
  bgCover ,
  bgContain ,
  combineGradientColors ,
  linGradient ,
  bgNone ,
  toT ,
  toTr ,
  toR ,
  toBr ,
  toB ,
  toBl ,
  toL ,
  toTl ,
  bgGradientToT ,
  bgGradientToTr ,
  bgGradientToR ,
  bgGradientToBr ,
  bgGradientToB ,
  bgGradientToBl ,
  bgGradientToL ,
  bgGradientToTl ,
  BorderRadius ,
  rounded ,
  BorderWidth ,
  borderWidth ,
  BorderColor ,
  borderColor ,
  borderSolid ,
  borderDashed ,
  borderDotted ,
  borderDouble ,
  borderHidden ,
  borderNone ,
  Divide ,
  divide ,
  divideSolid ,
  divideDashed ,
  divideDotted ,
  divideDouble ,
  divideNone ,
  outlineWidth ,
  outlineColor ,
  outlineOffset ,
  outlineSolid ,
  outlineDashed ,
  outlineDotted ,
  outlineDouble ,
  outlineHidden ,
  outlineNone ,
  Ring ,
  ringOffsetShadow ,
  ringShadow ,
  whiteShadow ,
  ring ,
  BoxShadow ,
  shadow ,
  opacity ,
  MixBlendMode ,
  mixBlend ,
  bgBlend ,
  Blur ,
  blur ,
  Brightness ,
  brightness ,
  Contrast ,
  contrast ,
  DropShadow ,
  dropShadow ,
  grayscale0 ,
  grayscale ,
  HueRotate ,
  hueRotate ,
  invert0 ,
  invert ,
  Saturate ,
  saturate ,
  sepia0 ,
  sepia ,
  backdropBlur ,
  backdropBrightness ,
  backdropContrast ,
  backdropGrayscale0 ,
  backdropGrayscale ,
  backdropHueRotate ,
  backdropInvert0 ,
  backdropInvert ,
  backdropOpacity ,
  backdropSaturate ,
  backdropSepia0 ,
  backdropSepia ,
  borderCollapse ,
  borderSeparate ,
  tableAuto ,
  tableFixed ,
  Cursor ,
  cursor ,
  caretColor ,
  pointerEventsNone ,
  pointerEventsAuto ,
  resizeNone ,
  resizeY ,
  resizeX ,
  resize ,
  scrollAuto ,
  scrollSmooth ,
  scrollM ,
  scrollMx ,
  scrollMy ,
  scrollMt ,
  scrollMr ,
  scrollMb ,
  scrollMl ,
  scrollP ,
  scrollPx ,
  scrollPy ,
  scrollPt ,
  scrollPr ,
  scrollPb ,
  scrollPl ,
  snapStart ,
  snapEnd ,
  snapCenter ,
  snapAlignNone ,
  snapNormal ,
  snapAlways ,
  SnapType ,
  snap ,
  TouchAction ,
  touch ,
  selectNone ,
  selectText ,
  selectAll ,
  selectAuto ,
  WillChange ,
  willChange ,
  fill ,
  stroke ,
  StrokeWidth ,
  strokeWidth ,
  srOnly ,
  noSrOnly ,
  transform ,
  transformGpu ,
  transformNone ,
  originCenter ,
  originRight ,
  originLeft ,
  originTop ,
  originTopLeft ,
  originTopRight ,
  originBottom ,
  originBottomRight ,
  originBottomLeft ,
  accentColor ,
  appearanceNone ,
  timingFunction ,
  transitionNone ,
  transitionAll ,
  transition ,
  transitionColors ,
  transitionOpacity ,
  transitionShadow ,
  transitionTransform ,
  duration ,
  easeLinear ,
  easeIn ,
  easeOut ,
  easeInOut ,
  delay ,
  animateNone ,
  animateSpin ,
  animatePing ,
  animatePulse ,
  animateBounce ,
  scale ,
  scaleX ,
  scaleY ,
  rotate ,
  translateX ,
  translateY ,
  skewX ,
  skewY ,
  Typography ,
  
}
/* emptyRule Not a pure module */
